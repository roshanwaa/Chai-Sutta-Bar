{"ast":null,"code":"import { n } from \"./chunk.DUT32TWM.js\";\n\n// src/internal/default-value.ts\nvar defaultValue = function defaultValue() {\n  var propertyName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"value\";\n  return function (proto, key) {\n    var ctor = proto.constructor;\n    var attributeChangedCallback = ctor.prototype.attributeChangedCallback;\n    ctor.prototype.attributeChangedCallback = function (name, old, value) {\n      var _a;\n      var options = ctor.getPropertyOptions(propertyName);\n      var attributeName = typeof options.attribute === \"string\" ? options.attribute : propertyName;\n      if (name === attributeName) {\n        var converter = options.converter || n;\n        var fromAttribute = typeof converter === \"function\" ? converter : (_a = converter == null ? void 0 : converter.fromAttribute) != null ? _a : n.fromAttribute;\n        var newValue = fromAttribute(value, options.type);\n        if (this[propertyName] !== newValue) {\n          this[key] = newValue;\n        }\n      }\n      attributeChangedCallback.call(this, name, old, value);\n    };\n  };\n};\nexport { defaultValue };","map":null,"metadata":{},"sourceType":"module"}