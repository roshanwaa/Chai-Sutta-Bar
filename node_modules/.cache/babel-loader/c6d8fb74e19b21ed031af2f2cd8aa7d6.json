{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"D:\\\\New folder\\\\Prj\\\\csb\\\\src\\\\Components\\\\Content\\\\Assets\\\\FormContact\\\\Form.jsx\";\n// import react from 'react';\nimport classes from '../../CSS/form.module.css';\nimport { useInput } from '../Hooks/usrInput';\nvar isEmpty = function isEmpty(value) {\n  return value.trim() !== '';\n};\nvar isEmailEmpty = function isEmailEmpty(value) {\n  return value.includes('@');\n};\nexport var Form = function Form() {\n  var _useInput = useInput(isEmpty),\n    nameEntered = _useInput.value,\n    nameEnteredIsValid = _useInput.isValid,\n    fNameInputHasError = _useInput.hasError,\n    nameChangeHandler = _useInput.valueChangeHandler,\n    nameInputBlurHandler = _useInput.inputBlurHandler,\n    nameResetInput = _useInput.reset;\n  var _useInput2 = useInput(isEmpty),\n    phnEntered = _useInput2.value,\n    enteredPhnIsValid = _useInput2.isValid,\n    phnInputHasError = _useInput2.hasError,\n    phnChangeHandler = _useInput2.valueChangeHandler,\n    phnInputBlurHandler = _useInput2.inputBlurHandler,\n    resetPhnInput = _useInput2.reset;\n  var _useInput3 = useInput(isEmailEmpty),\n    emailEntered = _useInput3.value,\n    enteredEmailIsValid = _useInput3.isValid,\n    emailInputHasError = _useInput3.hasError,\n    emailChangeHandler = _useInput3.valueChangeHandler,\n    emailInputBlurHandler = _useInput3.inputBlurHandler,\n    resetEmailInput = _useInput3.reset;\n  var _useInput4 = useInput(isEmpty),\n    messageEntered = _useInput4.value,\n    messageChangeHandler = _useInput4.valueChangeHandler,\n    resetMessageInput = _useInput4.reset;\n  var formIsValid = false;\n  if (nameEnteredIsValid && enteredPhnIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  var formSubmitHandler = function formSubmitHandler(e) {\n    e.preventDefault();\n    if (!nameEntered && !phnEntered && !emailEntered) {\n      return;\n    }\n    alert('Submitted');\n    console.log(nameEntered, phnEntered, emailEntered, messageEntered);\n    nameResetInput();\n    resetPhnInput();\n    resetEmailInput();\n    resetMessageInput();\n  };\n  var nameInputClasses = fNameInputHasError ? 'form-control invalid' : 'form-control';\n  var phnInputClasses = phnInputHasError ? 'form-control invalid' : 'form-control';\n  var emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmitHandler,\n    className: classes.form,\n    action: \"https://formsubmit.co/kumroshan120@gmail.com\",\n    method: \"POST\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: nameInputClasses,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    className: classes.app_form_control,\n    onChange: nameChangeHandler,\n    onBlur: nameInputBlurHandler,\n    value: nameEntered,\n    placeholder: \"Enter Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), fNameInputHasError && /*#__PURE__*/React.createElement(\"p\", {\n    className: 'error-text',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Please enter a valid Name\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: phnInputClasses,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"telephone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"tel\",\n    id: \"telephone\",\n    className: classes.app_form_control,\n    onChange: phnChangeHandler,\n    onBlur: phnInputBlurHandler,\n    value: phnEntered,\n    placeholder: \"Enter Phone Number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), phnInputHasError && /*#__PURE__*/React.createElement(\"p\", {\n    className: 'error-text',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Please enter a valid phone number\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: emailInputClasses,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"E-Mail Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    className: classes.app_form_control,\n    onChange: emailChangeHandler,\n    onBlur: emailInputBlurHandler,\n    value: emailEntered,\n    placeholder: \"Enter Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), emailInputHasError && /*#__PURE__*/React.createElement(\"p\", {\n    className: 'error-text',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Please enter a valid email address\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form__message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textarea \".concat(classes.app_form_control),\n    id: \"message\",\n    onChange: messageChangeHandler,\n    placeholder: \"Enter Message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form__actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !formIsValid,\n    className: classes.form__actions_Btn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};","map":{"version":3,"names":["classes","useInput","isEmpty","value","trim","isEmailEmpty","includes","Form","nameEntered","nameEnteredIsValid","isValid","fNameInputHasError","hasError","nameChangeHandler","valueChangeHandler","nameInputBlurHandler","inputBlurHandler","nameResetInput","reset","phnEntered","enteredPhnIsValid","phnInputHasError","phnChangeHandler","phnInputBlurHandler","resetPhnInput","emailEntered","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailInputBlurHandler","resetEmailInput","messageEntered","messageChangeHandler","resetMessageInput","formIsValid","formSubmitHandler","e","preventDefault","alert","console","log","nameInputClasses","phnInputClasses","emailInputClasses","form","app_form_control","form__message","form__actions","form__actions_Btn"],"sources":["D:/New folder/Prj/csb/src/Components/Content/Assets/FormContact/Form.jsx"],"sourcesContent":["// import react from 'react';\r\nimport classes from '../../CSS/form.module.css';\r\nimport { useInput } from '../Hooks/usrInput';\r\n\r\nconst isEmpty = (value) => value.trim() !== '';\r\nconst isEmailEmpty = (value) => value.includes('@');\r\n\r\nexport const Form = () => {\r\n  const {\r\n    value: nameEntered,\r\n    isValid: nameEnteredIsValid,\r\n    hasError: fNameInputHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameInputBlurHandler,\r\n    reset: nameResetInput,\r\n  } = useInput(isEmpty);\r\n\r\n  const {\r\n    value: phnEntered,\r\n    isValid: enteredPhnIsValid,\r\n    hasError: phnInputHasError,\r\n    valueChangeHandler: phnChangeHandler,\r\n    inputBlurHandler: phnInputBlurHandler,\r\n    reset: resetPhnInput,\r\n  } = useInput(isEmpty);\r\n\r\n  const {\r\n    value: emailEntered,\r\n    isValid: enteredEmailIsValid,\r\n    hasError: emailInputHasError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailInputBlurHandler,\r\n    reset: resetEmailInput,\r\n  } = useInput(isEmailEmpty);\r\n\r\n  const {\r\n    value: messageEntered,\r\n    valueChangeHandler: messageChangeHandler,\r\n    reset: resetMessageInput,\r\n  } = useInput(isEmpty);\r\n\r\n  let formIsValid = false;\r\n\r\n  if (nameEnteredIsValid && enteredPhnIsValid && enteredEmailIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!nameEntered && !phnEntered && !emailEntered) {\r\n      return;\r\n    }\r\n\r\n    alert('Submitted');\r\n    console.log(nameEntered, phnEntered, emailEntered, messageEntered);\r\n\r\n    nameResetInput();\r\n    resetPhnInput();\r\n    resetEmailInput();\r\n    resetMessageInput();\r\n  };\r\n\r\n  const nameInputClasses = fNameInputHasError\r\n    ? 'form-control invalid'\r\n    : 'form-control';\r\n\r\n  const phnInputClasses = phnInputHasError\r\n    ? 'form-control invalid'\r\n    : 'form-control';\r\n\r\n  const emailInputClasses = emailInputHasError\r\n    ? 'form-control invalid'\r\n    : 'form-control';\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={formSubmitHandler}\r\n        className={classes.form}\r\n        action=\"https://formsubmit.co/kumroshan120@gmail.com\"\r\n        method=\"POST\"\r\n      >\r\n        {/* <div className={nameInputClasses}> */}\r\n        <div className={nameInputClasses}>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            className={classes.app_form_control}\r\n            onChange={nameChangeHandler}\r\n            onBlur={nameInputBlurHandler}\r\n            value={nameEntered}\r\n            placeholder=\"Enter Name\"\r\n          />\r\n          {fNameInputHasError && (\r\n            <p className={'error-text'}>Please enter a valid Name</p>\r\n          )}\r\n        </div>\r\n        {/* </div> */}\r\n\r\n        <div className={phnInputClasses}>\r\n          <label htmlFor=\"telephone\">Phone Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"telephone\"\r\n            className={classes.app_form_control}\r\n            onChange={phnChangeHandler}\r\n            onBlur={phnInputBlurHandler}\r\n            value={phnEntered}\r\n            placeholder=\"Enter Phone Number\"\r\n          />\r\n          {phnInputHasError && (\r\n            <p className={'error-text'}>Please enter a valid phone number</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className={emailInputClasses}>\r\n          <label htmlFor=\"email\">E-Mail Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className={classes.app_form_control}\r\n            onChange={emailChangeHandler}\r\n            onBlur={emailInputBlurHandler}\r\n            value={emailEntered}\r\n            placeholder=\"Enter Email\"\r\n          />\r\n          {emailInputHasError && (\r\n            <p className={'error-text'}>Please enter a valid email address</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.form__message}>\r\n          <label htmlFor=\"message\">Message</label>\r\n          <textarea\r\n            className={`textarea ${classes.app_form_control}`}\r\n            id=\"message\"\r\n            onChange={messageChangeHandler}\r\n            placeholder=\"Enter Message\"\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.form__actions}>\r\n          <button disabled={!formIsValid} className={classes.form__actions_Btn}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}