{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport { radio_group_styles_default } from \"./chunk.2PTSOWQH.js\";\nimport { FormControlController } from \"./chunk.DOQUAVYF.js\";\nimport { HasSlotController } from \"./chunk.3IYPB6RR.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { o } from \"./chunk.ORW72H2K.js\";\nimport { ShoelaceElement, e, e2, i, t } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/radio-group/radio-group.ts\nvar SlRadioGroup = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlRadioGroup, _ShoelaceElement);\n  function SlRadioGroup() {\n    var _this;\n    _classCallCheck(this, SlRadioGroup);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlRadioGroup).apply(this, arguments));\n    _this.formControlController = new FormControlController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.hasSlotController = new HasSlotController(_assertThisInitialized(_assertThisInitialized(_this)), \"help-text\", \"label\");\n    _this.customValidityMessage = \"\";\n    _this.hasButtonGroup = false;\n    _this.errorMessage = \"\";\n    _this.defaultValue = \"\";\n    _this.label = \"\";\n    _this.helpText = \"\";\n    _this.name = \"option\";\n    _this.value = \"\";\n    _this.form = \"\";\n    _this.required = false;\n    return _this;\n  }\n  _createClass(SlRadioGroup, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(SlRadioGroup.prototype), \"connectedCallback\", this).call(this);\n      this.defaultValue = this.value;\n    }\n  }, {\n    key: \"firstUpdated\",\n    value: function firstUpdated() {\n      this.formControlController.updateValidity();\n    }\n  }, {\n    key: \"getAllRadios\",\n    value: function getAllRadios() {\n      return _toConsumableArray(this.querySelectorAll(\"sl-radio, sl-radio-button\"));\n    }\n  }, {\n    key: \"handleRadioClick\",\n    value: function handleRadioClick(event) {\n      var target = event.target.closest(\"sl-radio, sl-radio-button\");\n      var radios = this.getAllRadios();\n      var oldValue = this.value;\n      if (target.disabled) {\n        return;\n      }\n      this.value = target.value;\n      radios.forEach(function (radio) {\n        return radio.checked = radio === target;\n      });\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      var _this2 = this;\n      var _a;\n      if (![\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \" \"].includes(event.key)) {\n        return;\n      }\n      var radios = this.getAllRadios().filter(function (radio) {\n        return !radio.disabled;\n      });\n      var checkedRadio = (_a = radios.find(function (radio) {\n        return radio.checked;\n      })) != null ? _a : radios[0];\n      var incr = event.key === \" \" ? 0 : [\"ArrowUp\", \"ArrowLeft\"].includes(event.key) ? -1 : 1;\n      var oldValue = this.value;\n      var index = radios.indexOf(checkedRadio) + incr;\n      if (index < 0) {\n        index = radios.length - 1;\n      }\n      if (index > radios.length - 1) {\n        index = 0;\n      }\n      this.getAllRadios().forEach(function (radio) {\n        radio.checked = false;\n        if (!_this2.hasButtonGroup) {\n          radio.tabIndex = -1;\n        }\n      });\n      this.value = radios[index].value;\n      radios[index].checked = true;\n      if (!this.hasButtonGroup) {\n        radios[index].tabIndex = 0;\n        radios[index].focus();\n      } else {\n        radios[index].shadowRoot.querySelector(\"button\").focus();\n      }\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleLabelClick\",\n    value: function handleLabelClick() {\n      var radios = this.getAllRadios();\n      var checked = radios.find(function (radio) {\n        return radio.checked;\n      });\n      var radioToFocus = checked || radios[0];\n      if (radioToFocus) {\n        radioToFocus.focus();\n      }\n    }\n  }, {\n    key: \"handleSlotChange\",\n    value: function handleSlotChange() {\n      var _this3 = this;\n      var _a;\n      var radios = this.getAllRadios();\n      radios.forEach(function (radio) {\n        return radio.checked = radio.value === _this3.value;\n      });\n      this.hasButtonGroup = radios.some(function (radio) {\n        return radio.tagName.toLowerCase() === \"sl-radio-button\";\n      });\n      if (!radios.some(function (radio) {\n        return radio.checked;\n      })) {\n        if (this.hasButtonGroup) {\n          var buttonRadio = radios[0].shadowRoot.querySelector(\"button\");\n          buttonRadio.tabIndex = 0;\n        } else {\n          radios[0].tabIndex = 0;\n        }\n      }\n      if (this.hasButtonGroup) {\n        var buttonGroup = (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"sl-button-group\");\n        if (buttonGroup) {\n          buttonGroup.disableRole = true;\n        }\n      }\n    }\n  }, {\n    key: \"updateCheckedRadio\",\n    value: function updateCheckedRadio() {\n      var _this4 = this;\n      var radios = this.getAllRadios();\n      radios.forEach(function (radio) {\n        return radio.checked = radio.value === _this4.value;\n      });\n      this.formControlController.setValidity(this.checkValidity());\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange() {\n      if (this.hasUpdated) {\n        this.updateCheckedRadio();\n      }\n    } /** Checks for validity but does not show the browser's validation message. */\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity() {\n      var isRequiredAndEmpty = this.required && !this.value;\n      var hasCustomValidityMessage = this.customValidityMessage !== \"\";\n      if (isRequiredAndEmpty || hasCustomValidityMessage) {\n        return false;\n      }\n      return true;\n    } /** Sets a custom validation message. Pass an empty string to restore validity. */\n  }, {\n    key: \"setCustomValidity\",\n    value: function setCustomValidity() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      this.customValidityMessage = message;\n      this.errorMessage = message;\n      this.validationInput.setCustomValidity(message);\n      this.formControlController.updateValidity();\n    } /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  }, {\n    key: \"reportValidity\",\n    value: function reportValidity() {\n      var _this5 = this;\n      var isValid = this.checkValidity();\n      this.errorMessage = this.customValidityMessage || isValid ? \"\" : this.validationInput.validationMessage;\n      this.formControlController.setValidity(isValid);\n      this.validationInput.hidden = true;\n      clearTimeout(this.validationTimeout);\n      if (!isValid) {\n        this.validationInput.hidden = false;\n        this.validationInput.reportValidity();\n        this.validationTimeout = setTimeout(function () {\n          return _this5.validationInput.hidden = true;\n        }, 1e4);\n      }\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hasLabelSlot = this.hasSlotController.test(\"label\");\n      var hasHelpTextSlot = this.hasSlotController.test(\"help-text\");\n      var hasLabel = this.label ? true : !!hasLabelSlot;\n      var hasHelpText = this.helpText ? true : !!hasHelpTextSlot;\n      var defaultSlot = y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <slot\\n        @click=\", \"\\n        @keydown=\", \"\\n        @slotchange=\", \"\\n        role=\\\"presentation\\\"\\n      ></slot>\\n    \"])), this.handleRadioClick, this.handleKeyDown, this.handleSlotChange);\n      return y(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      <fieldset\\n        part=\\\"form-control\\\"\\n        class=\", \"\\n        role=\\\"radiogroup\\\"\\n        aria-labelledby=\\\"label\\\"\\n        aria-describedby=\\\"help-text\\\"\\n        aria-errormessage=\\\"error-message\\\"\\n      >\\n        <label\\n          part=\\\"form-control-label\\\"\\n          id=\\\"label\\\"\\n          class=\\\"form-control__label\\\"\\n          aria-hidden=\", \"\\n          @click=\", \"\\n        >\\n          <slot name=\\\"label\\\">\", \"</slot>\\n        </label>\\n\\n        <div part=\\\"form-control-input\\\" class=\\\"form-control-input\\\">\\n          <div class=\\\"visually-hidden\\\">\\n            <div id=\\\"error-message\\\" aria-live=\\\"assertive\\\">\", \"</div>\\n            <label class=\\\"radio-group__validation\\\">\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"radio-group__validation-input\\\"\\n                ?required=\", \"\\n                tabindex=\\\"-1\\\"\\n                hidden\\n              />\\n            </label>\\n          </div>\\n\\n          \", \"\\n        </div>\\n\\n        <slot\\n          name=\\\"help-text\\\"\\n          part=\\\"form-control-help-text\\\"\\n          id=\\\"help-text\\\"\\n          class=\\\"form-control__help-text\\\"\\n          aria-hidden=\", \"\\n        >\\n          \", \"\\n        </slot>\\n      </fieldset>\\n    \"])), o({\n        \"form-control\": true,\n        \"form-control--medium\": true,\n        \"form-control--radio-group\": true,\n        \"form-control--has-label\": hasLabel,\n        \"form-control--has-help-text\": hasHelpText\n      }), hasLabel ? \"false\" : \"true\", this.handleLabelClick, this.label, this.errorMessage, this.required, this.hasButtonGroup ? y(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                <sl-button-group part=\\\"button-group\\\" exportparts=\\\"base:button-group__base\\\">\\n                  \", \"\\n                </sl-button-group>\\n              \"])), defaultSlot) : defaultSlot, hasHelpText ? \"false\" : \"true\", this.helpText);\n    }\n  }]);\n  return SlRadioGroup;\n}(ShoelaceElement);\nSlRadioGroup.styles = radio_group_styles_default;\n__decorateClass([i(\"slot:not([name])\")], SlRadioGroup.prototype, \"defaultSlot\", 2);\n__decorateClass([i(\".radio-group__validation-input\")], SlRadioGroup.prototype, \"validationInput\", 2);\n__decorateClass([t()], SlRadioGroup.prototype, \"hasButtonGroup\", 2);\n__decorateClass([t()], SlRadioGroup.prototype, \"errorMessage\", 2);\n__decorateClass([t()], SlRadioGroup.prototype, \"defaultValue\", 2);\n__decorateClass([e2()], SlRadioGroup.prototype, \"label\", 2);\n__decorateClass([e2({\n  attribute: \"help-text\"\n})], SlRadioGroup.prototype, \"helpText\", 2);\n__decorateClass([e2()], SlRadioGroup.prototype, \"name\", 2);\n__decorateClass([e2({\n  reflect: true\n})], SlRadioGroup.prototype, \"value\", 2);\n__decorateClass([e2({\n  reflect: true\n})], SlRadioGroup.prototype, \"form\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlRadioGroup.prototype, \"required\", 2);\n__decorateClass([watch(\"value\")], SlRadioGroup.prototype, \"handleValueChange\", 1);\nSlRadioGroup = __decorateClass([e(\"sl-radio-group\")], SlRadioGroup);\nexport { SlRadioGroup };","map":null,"metadata":{},"sourceType":"module"}