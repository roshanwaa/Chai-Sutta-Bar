{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport { rating_styles_default } from \"./chunk.2P5TE3VD.js\";\nimport { clamp } from \"./chunk.HF7GESMZ.js\";\nimport { i as i2 } from \"./chunk.B6IYY6FB.js\";\nimport { LocalizeController } from \"./chunk.LLXYF66Q.js\";\nimport { o } from \"./chunk.KL42ETAP.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { o as o2 } from \"./chunk.ORW72H2K.js\";\nimport { ShoelaceElement, e, e2, i, t } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/rating/rating.ts\nvar SlRating = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlRating, _ShoelaceElement);\n  function SlRating() {\n    var _this;\n    _classCallCheck(this, SlRating);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlRating).apply(this, arguments));\n    _this.localize = new LocalizeController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.hoverValue = 0;\n    _this.isHovering = false;\n    _this.label = \"\";\n    _this.value = 0;\n    _this.max = 5;\n    _this.precision = 1;\n    _this.readonly = false;\n    _this.disabled = false;\n    _this.getSymbol = function () {\n      return '<sl-icon name=\"star-fill\" library=\"system\"></sl-icon>';\n    };\n    return _this;\n  }\n  _createClass(SlRating, [{\n    key: \"getValueFromMousePosition\",\n    value: function getValueFromMousePosition(event) {\n      return this.getValueFromXCoordinate(event.clientX);\n    }\n  }, {\n    key: \"getValueFromTouchPosition\",\n    value: function getValueFromTouchPosition(event) {\n      return this.getValueFromXCoordinate(event.touches[0].clientX);\n    }\n  }, {\n    key: \"getValueFromXCoordinate\",\n    value: function getValueFromXCoordinate(coordinate) {\n      var isRtl = this.localize.dir() === \"rtl\";\n      var _this$rating$getBound = this.rating.getBoundingClientRect(),\n        left = _this$rating$getBound.left,\n        right = _this$rating$getBound.right,\n        width = _this$rating$getBound.width;\n      var value = isRtl ? this.roundToPrecision((right - coordinate) / width * this.max, this.precision) : this.roundToPrecision((coordinate - left) / width * this.max, this.precision);\n      return clamp(value, 0, this.max);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.setValue(this.getValueFromMousePosition(event));\n      this.emit(\"sl-change\");\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(newValue) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      this.value = newValue === this.value ? 0 : newValue;\n      this.isHovering = false;\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      var isLtr = this.localize.dir() === \"ltr\";\n      var isRtl = this.localize.dir() === \"rtl\";\n      var oldValue = this.value;\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      if (event.key === \"ArrowDown\" || isLtr && event.key === \"ArrowLeft\" || isRtl && event.key === \"ArrowRight\") {\n        var decrement = event.shiftKey ? 1 : this.precision;\n        this.value = Math.max(0, this.value - decrement);\n        event.preventDefault();\n      }\n      if (event.key === \"ArrowUp\" || isLtr && event.key === \"ArrowRight\" || isRtl && event.key === \"ArrowLeft\") {\n        var increment = event.shiftKey ? 1 : this.precision;\n        this.value = Math.min(this.max, this.value + increment);\n        event.preventDefault();\n      }\n      if (event.key === \"Home\") {\n        this.value = 0;\n        event.preventDefault();\n      }\n      if (event.key === \"End\") {\n        this.value = this.max;\n        event.preventDefault();\n      }\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n      }\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(event) {\n      this.isHovering = true;\n      this.hoverValue = this.getValueFromMousePosition(event);\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(event) {\n      this.hoverValue = this.getValueFromMousePosition(event);\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave() {\n      this.isHovering = false;\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(event) {\n      this.isHovering = true;\n      this.hoverValue = this.getValueFromTouchPosition(event);\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(event) {\n      this.hoverValue = this.getValueFromTouchPosition(event);\n    }\n  }, {\n    key: \"handleTouchEnd\",\n    value: function handleTouchEnd(event) {\n      this.isHovering = false;\n      this.setValue(this.hoverValue);\n      this.emit(\"sl-change\");\n      event.preventDefault();\n    }\n  }, {\n    key: \"roundToPrecision\",\n    value: function roundToPrecision(numberToRound) {\n      var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n      var multiplier = 1 / precision;\n      return Math.ceil(numberToRound * multiplier) / multiplier;\n    }\n  }, {\n    key: \"handleHoverValueChange\",\n    value: function handleHoverValueChange() {\n      this.emit(\"sl-hover\", {\n        detail: {\n          phase: \"move\",\n          value: this.hoverValue\n        }\n      });\n    }\n  }, {\n    key: \"handleIsHoveringChange\",\n    value: function handleIsHoveringChange() {\n      this.emit(\"sl-hover\", {\n        detail: {\n          phase: this.isHovering ? \"start\" : \"end\",\n          value: this.hoverValue\n        }\n      });\n    } /** Sets focus on the rating. */\n  }, {\n    key: \"focus\",\n    value: function focus(options) {\n      this.rating.focus(options);\n    } /** Removes focus from the rating. */\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.rating.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isRtl = this.localize.dir() === \"rtl\";\n      var counter = Array.from(Array(this.max).keys());\n      var displayValue = 0;\n      if (this.disabled || this.readonly) {\n        displayValue = this.value;\n      } else {\n        displayValue = this.isHovering ? this.hoverValue : this.value;\n      }\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div\\n        part=\\\"base\\\"\\n        class=\", \"\\n        role=\\\"slider\\\"\\n        aria-label=\", \"\\n        aria-disabled=\", \"\\n        aria-readonly=\", \"\\n        aria-valuenow=\", \"\\n        aria-valuemin=\", \"\\n        aria-valuemax=\", \"\\n        tabindex=\", \"\\n        @click=\", \"\\n        @keydown=\", \"\\n        @mouseenter=\", \"\\n        @touchstart=\", \"\\n        @mouseleave=\", \"\\n        @touchend=\", \"\\n        @mousemove=\", \"\\n        @touchmove=\", \"\\n      >\\n        <span class=\\\"rating__symbols rating__symbols--inactive\\\">\\n          \", \"\\n        </span>\\n\\n        <span class=\\\"rating__symbols rating__symbols--indicator\\\">\\n          \", \"\\n        </span>\\n      </div>\\n    \"])), o2({\n        rating: true,\n        \"rating--readonly\": this.readonly,\n        \"rating--disabled\": this.disabled,\n        \"rating--rtl\": isRtl\n      }), this.label, this.disabled ? \"true\" : \"false\", this.readonly ? \"true\" : \"false\", this.value, 0, this.max, this.disabled ? \"-1\" : \"0\", this.handleClick, this.handleKeyDown, this.handleMouseEnter, this.handleTouchStart, this.handleMouseLeave, this.handleTouchEnd, this.handleMouseMove, this.handleTouchMove, counter.map(function (index) {\n        return y(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <span\\n                class=\", \"\\n                role=\\\"presentation\\\"\\n                @mouseenter=\", \"\\n              >\\n                \", \"\\n              </span>\\n            \"])), o2({\n          rating__symbol: true,\n          \"rating__symbol--hover\": _this2.isHovering && Math.ceil(displayValue) === index + 1\n        }), _this2.handleMouseEnter, o(_this2.getSymbol(index + 1)));\n      }), counter.map(function (index) {\n        return y(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n              <span\\n                class=\", \"\\n                style=\", \"\\n                role=\\\"presentation\\\"\\n              >\\n                \", \"\\n              </span>\\n            \"])), o2({\n          rating__symbol: true,\n          \"rating__symbol--hover\": _this2.isHovering && Math.ceil(displayValue) === index + 1\n        }), i2({\n          clipPath: displayValue > index + 1 ? \"none\" : isRtl ? \"inset(0 0 0 \".concat(100 - (displayValue - index) / 1 * 100, \"%)\") : \"inset(0 \".concat(100 - (displayValue - index) / 1 * 100, \"% 0 0)\")\n        }), o(_this2.getSymbol(index + 1)));\n      }));\n    }\n  }]);\n  return SlRating;\n}(ShoelaceElement);\nSlRating.styles = rating_styles_default;\n__decorateClass([i(\".rating\")], SlRating.prototype, \"rating\", 2);\n__decorateClass([t()], SlRating.prototype, \"hoverValue\", 2);\n__decorateClass([t()], SlRating.prototype, \"isHovering\", 2);\n__decorateClass([e2()], SlRating.prototype, \"label\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlRating.prototype, \"value\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlRating.prototype, \"max\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlRating.prototype, \"precision\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlRating.prototype, \"readonly\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlRating.prototype, \"disabled\", 2);\n__decorateClass([e2()], SlRating.prototype, \"getSymbol\", 2);\n__decorateClass([watch(\"hoverValue\")], SlRating.prototype, \"handleHoverValueChange\", 1);\n__decorateClass([watch(\"isHovering\")], SlRating.prototype, \"handleIsHoveringChange\", 1);\nSlRating = __decorateClass([e(\"sl-rating\")], SlRating);\nexport { SlRating };","map":null,"metadata":{},"sourceType":"module"}