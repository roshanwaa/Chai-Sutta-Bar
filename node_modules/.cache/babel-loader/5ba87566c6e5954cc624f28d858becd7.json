{"ast":null,"code":"import { __spreadProps, __spreadValues } from \"./chunk.LKA3TPUC.js\";\n\n// src/internal/animate.ts\nfunction animateTo(el, keyframes, options) {\n  return new Promise(function (resolve) {\n    if ((options == null ? void 0 : options.duration) === Infinity) {\n      throw new Error(\"Promise-based animations must be finite.\");\n    }\n    var animation = el.animate(keyframes, __spreadProps(__spreadValues({}, options), {\n      duration: prefersReducedMotion() ? 0 : options.duration\n    }));\n    animation.addEventListener(\"cancel\", resolve, {\n      once: true\n    });\n    animation.addEventListener(\"finish\", resolve, {\n      once: true\n    });\n  });\n}\nfunction parseDuration(delay) {\n  delay = delay.toString().toLowerCase();\n  if (delay.indexOf(\"ms\") > -1) {\n    return parseFloat(delay);\n  }\n  if (delay.indexOf(\"s\") > -1) {\n    return parseFloat(delay) * 1e3;\n  }\n  return parseFloat(delay);\n}\nfunction prefersReducedMotion() {\n  var query = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n  return query.matches;\n}\nfunction stopAnimations(el) {\n  return Promise.all(el.getAnimations().map(function (animation) {\n    return new Promise(function (resolve) {\n      var handleAnimationEvent = requestAnimationFrame(resolve);\n      animation.addEventListener(\"cancel\", function () {\n        return handleAnimationEvent;\n      }, {\n        once: true\n      });\n      animation.addEventListener(\"finish\", function () {\n        return handleAnimationEvent;\n      }, {\n        once: true\n      });\n      animation.cancel();\n    });\n  }));\n}\nfunction shimKeyframesHeightAuto(keyframes, calculatedHeight) {\n  return keyframes.map(function (keyframe) {\n    return __spreadProps(__spreadValues({}, keyframe), {\n      height: keyframe.height === \"auto\" ? \"\".concat(calculatedHeight, \"px\") : keyframe.height\n    });\n  });\n}\nexport { animateTo, parseDuration, stopAnimations, shimKeyframesHeightAuto };","map":null,"metadata":{},"sourceType":"module"}