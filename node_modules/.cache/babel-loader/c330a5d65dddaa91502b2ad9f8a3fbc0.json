{"ast":null,"code":"import _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { getTabbableBoundary } from \"./chunk.G7G6UAKI.js\";\n\n// src/internal/modal.ts\nvar activeModals = [];\nvar Modal = /*#__PURE__*/function () {\n  function Modal(element) {\n    _classCallCheck(this, Modal);\n    this.tabDirection = \"forward\";\n    this.element = element;\n    this.handleFocusIn = this.handleFocusIn.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n  _createClass(Modal, [{\n    key: \"activate\",\n    value: function activate() {\n      activeModals.push(this.element);\n      document.addEventListener(\"focusin\", this.handleFocusIn);\n      document.addEventListener(\"keydown\", this.handleKeyDown);\n      document.addEventListener(\"keyup\", this.handleKeyUp);\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      var _this = this;\n      activeModals = activeModals.filter(function (modal) {\n        return modal !== _this.element;\n      });\n      document.removeEventListener(\"focusin\", this.handleFocusIn);\n      document.removeEventListener(\"keydown\", this.handleKeyDown);\n      document.removeEventListener(\"keyup\", this.handleKeyUp);\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return activeModals[activeModals.length - 1] === this.element;\n    }\n  }, {\n    key: \"checkFocus\",\n    value: function checkFocus() {\n      if (this.isActive()) {\n        if (!this.element.matches(\":focus-within\")) {\n          var _getTabbableBoundary = getTabbableBoundary(this.element),\n            start = _getTabbableBoundary.start,\n            end = _getTabbableBoundary.end;\n          var target = this.tabDirection === \"forward\" ? start : end;\n          if (typeof (target == null ? void 0 : target.focus) === \"function\") {\n            target.focus({\n              preventScroll: true\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleFocusIn\",\n    value: function handleFocusIn() {\n      this.checkFocus();\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      var _this2 = this;\n      if (event.key === \"Tab\" && event.shiftKey) {\n        this.tabDirection = \"backward\";\n        requestAnimationFrame(function () {\n          return _this2.checkFocus();\n        });\n      }\n    }\n  }, {\n    key: \"handleKeyUp\",\n    value: function handleKeyUp() {\n      this.tabDirection = \"forward\";\n    }\n  }]);\n  return Modal;\n}();\nexport { Modal };","map":null,"metadata":{},"sourceType":"module"}