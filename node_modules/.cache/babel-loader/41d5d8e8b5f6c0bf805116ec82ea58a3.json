{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _templateObject;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { dist_exports } from \"./chunk.E4AJYFRU.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { ShoelaceElement, e, e2, e3 } from \"./chunk.Z5VD5WTS.js\";\nimport { animation_styles_default } from \"./chunk.H7DIVJJK.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/animation/animation.ts\nvar SlAnimation = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlAnimation, _ShoelaceElement);\n  function SlAnimation() {\n    var _this;\n    _classCallCheck(this, SlAnimation);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlAnimation).apply(this, arguments));\n    _this.hasStarted = false;\n    _this.name = \"none\";\n    _this.play = false;\n    _this.delay = 0;\n    _this.direction = \"normal\";\n    _this.duration = 1e3;\n    _this.easing = \"linear\";\n    _this.endDelay = 0;\n    _this.fill = \"auto\";\n    _this.iterations = Infinity;\n    _this.iterationStart = 0;\n    _this.playbackRate = 1;\n    return _this;\n  }\n  /** Gets and sets the current animation time. */\n  _createClass(SlAnimation, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(SlAnimation.prototype), \"connectedCallback\", this).call(this);\n      this.createAnimation();\n      this.handleAnimationCancel = this.handleAnimationCancel.bind(this);\n      this.handleAnimationFinish = this.handleAnimationFinish.bind(this);\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      _get(_getPrototypeOf(SlAnimation.prototype), \"disconnectedCallback\", this).call(this);\n      this.destroyAnimation();\n    }\n  }, {\n    key: \"handleAnimationFinish\",\n    value: function handleAnimationFinish() {\n      this.play = false;\n      this.hasStarted = false;\n      this.emit(\"sl-finish\");\n    }\n  }, {\n    key: \"handleAnimationCancel\",\n    value: function handleAnimationCancel() {\n      this.play = false;\n      this.hasStarted = false;\n      this.emit(\"sl-cancel\");\n    }\n  }, {\n    key: \"handleSlotChange\",\n    value: function handleSlotChange() {\n      this.destroyAnimation();\n      this.createAnimation();\n    }\n  }, {\n    key: \"createAnimation\",\n    value: function () {\n      var _createAnimation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _a, _b, easing, keyframes, slot, element;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              easing = (_a = dist_exports.easings[this.easing]) != null ? _a : this.easing;\n              keyframes = (_b = this.keyframes) != null ? _b : dist_exports[this.name];\n              _context.next = 4;\n              return this.defaultSlot;\n            case 4:\n              slot = _context.sent;\n              element = slot.assignedElements()[0];\n              if (!(!element || !keyframes)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\", false);\n            case 8:\n              this.destroyAnimation();\n              this.animation = element.animate(keyframes, {\n                delay: this.delay,\n                direction: this.direction,\n                duration: this.duration,\n                easing: easing,\n                endDelay: this.endDelay,\n                fill: this.fill,\n                iterationStart: this.iterationStart,\n                iterations: this.iterations\n              });\n              this.animation.playbackRate = this.playbackRate;\n              this.animation.addEventListener(\"cancel\", this.handleAnimationCancel);\n              this.animation.addEventListener(\"finish\", this.handleAnimationFinish);\n              if (this.play) {\n                this.hasStarted = true;\n                this.emit(\"sl-start\");\n              } else {\n                this.animation.pause();\n              }\n              return _context.abrupt(\"return\", true);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function createAnimation() {\n        return _createAnimation.apply(this, arguments);\n      }\n      return createAnimation;\n    }()\n  }, {\n    key: \"destroyAnimation\",\n    value: function destroyAnimation() {\n      if (this.animation) {\n        this.animation.cancel();\n        this.animation.removeEventListener(\"cancel\", this.handleAnimationCancel);\n        this.animation.removeEventListener(\"finish\", this.handleAnimationFinish);\n        this.hasStarted = false;\n      }\n    }\n  }, {\n    key: \"handleAnimationChange\",\n    value: function handleAnimationChange() {\n      if (!this.hasUpdated) {\n        return;\n      }\n      this.createAnimation();\n    }\n  }, {\n    key: \"handlePlayChange\",\n    value: function handlePlayChange() {\n      if (this.animation) {\n        if (this.play && !this.hasStarted) {\n          this.hasStarted = true;\n          this.emit(\"sl-start\");\n        }\n        if (this.play) {\n          this.animation.play();\n        } else {\n          this.animation.pause();\n        }\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"handlePlaybackRateChange\",\n    value: function handlePlaybackRateChange() {\n      if (this.animation) {\n        this.animation.playbackRate = this.playbackRate;\n      }\n    } /** Clears all keyframe effects caused by this animation and aborts its playback. */\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var _a;\n      (_a = this.animation) == null ? void 0 : _a.cancel();\n    } /** Sets the playback time to the end of the animation corresponding to the current playback direction. */\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      var _a;\n      (_a = this.animation) == null ? void 0 : _a.finish();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\" <slot @slotchange=\", \"></slot> \"])), this.handleSlotChange);\n    }\n  }, {\n    key: \"currentTime\",\n    get: function get() {\n      var _a, _b;\n      return (_b = (_a = this.animation) == null ? void 0 : _a.currentTime) != null ? _b : 0;\n    },\n    set: function set(time) {\n      if (this.animation) {\n        this.animation.currentTime = time;\n      }\n    }\n  }]);\n  return SlAnimation;\n}(ShoelaceElement);\nSlAnimation.styles = animation_styles_default;\n__decorateClass([e3(\"slot\")], SlAnimation.prototype, \"defaultSlot\", 2);\n__decorateClass([e2()], SlAnimation.prototype, \"name\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlAnimation.prototype, \"play\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlAnimation.prototype, \"delay\", 2);\n__decorateClass([e2()], SlAnimation.prototype, \"direction\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlAnimation.prototype, \"duration\", 2);\n__decorateClass([e2()], SlAnimation.prototype, \"easing\", 2);\n__decorateClass([e2({\n  attribute: \"end-delay\",\n  type: Number\n})], SlAnimation.prototype, \"endDelay\", 2);\n__decorateClass([e2()], SlAnimation.prototype, \"fill\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlAnimation.prototype, \"iterations\", 2);\n__decorateClass([e2({\n  attribute: \"iteration-start\",\n  type: Number\n})], SlAnimation.prototype, \"iterationStart\", 2);\n__decorateClass([e2({\n  attribute: false\n})], SlAnimation.prototype, \"keyframes\", 2);\n__decorateClass([e2({\n  attribute: \"playback-rate\",\n  type: Number\n})], SlAnimation.prototype, \"playbackRate\", 2);\n__decorateClass([watch([\"name\", \"delay\", \"direction\", \"duration\", \"easing\", \"endDelay\", \"fill\", \"iterations\", \"iterationsStart\", \"keyframes\"])], SlAnimation.prototype, \"handleAnimationChange\", 1);\n__decorateClass([watch(\"play\")], SlAnimation.prototype, \"handlePlayChange\", 1);\n__decorateClass([watch(\"playbackRate\")], SlAnimation.prototype, \"handlePlaybackRateChange\", 1);\nSlAnimation = __decorateClass([e(\"sl-animation\")], SlAnimation);\nexport { SlAnimation };","map":null,"metadata":{},"sourceType":"module"}