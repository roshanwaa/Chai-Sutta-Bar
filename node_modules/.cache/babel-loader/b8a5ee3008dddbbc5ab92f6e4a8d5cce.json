{"ast":null,"code":"// src/internal/offset.ts\nfunction getOffset(element, parent) {\n  return {\n    top: Math.round(element.getBoundingClientRect().top - parent.getBoundingClientRect().top),\n    left: Math.round(element.getBoundingClientRect().left - parent.getBoundingClientRect().left)\n  };\n}\n\n// src/internal/scroll.ts\nvar locks = /* @__PURE__ */new Set();\nfunction getScrollbarWidth() {\n  var documentWidth = document.documentElement.clientWidth;\n  return Math.abs(window.innerWidth - documentWidth);\n}\nfunction lockBodyScrolling(lockingEl) {\n  locks.add(lockingEl);\n  if (!document.body.classList.contains(\"sl-scroll-lock\")) {\n    var scrollbarWidth = getScrollbarWidth();\n    document.body.classList.add(\"sl-scroll-lock\");\n    document.body.style.setProperty(\"--sl-scroll-lock-size\", \"\".concat(scrollbarWidth, \"px\"));\n  }\n}\nfunction unlockBodyScrolling(lockingEl) {\n  locks.delete(lockingEl);\n  if (locks.size === 0) {\n    document.body.classList.remove(\"sl-scroll-lock\");\n    document.body.style.removeProperty(\"--sl-scrollbar-width\");\n  }\n}\nfunction scrollIntoView(element, container) {\n  var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"vertical\";\n  var behavior = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"smooth\";\n  var offset = getOffset(element, container);\n  var offsetTop = offset.top + container.scrollTop;\n  var offsetLeft = offset.left + container.scrollLeft;\n  var minX = container.scrollLeft;\n  var maxX = container.scrollLeft + container.offsetWidth;\n  var minY = container.scrollTop;\n  var maxY = container.scrollTop + container.offsetHeight;\n  if (direction === \"horizontal\" || direction === \"both\") {\n    if (offsetLeft < minX) {\n      container.scrollTo({\n        left: offsetLeft,\n        behavior: behavior\n      });\n    } else if (offsetLeft + element.clientWidth > maxX) {\n      container.scrollTo({\n        left: offsetLeft - container.offsetWidth + element.clientWidth,\n        behavior: behavior\n      });\n    }\n  }\n  if (direction === \"vertical\" || direction === \"both\") {\n    if (offsetTop < minY) {\n      container.scrollTo({\n        top: offsetTop,\n        behavior: behavior\n      });\n    } else if (offsetTop + element.clientHeight > maxY) {\n      container.scrollTo({\n        top: offsetTop - container.offsetHeight + element.clientHeight,\n        behavior: behavior\n      });\n    }\n  }\n}\nexport { lockBodyScrolling, unlockBodyScrolling, scrollIntoView };","map":null,"metadata":{},"sourceType":"module"}