{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject, _templateObject2;\nimport { range_styles_default } from \"./chunk.YVLKV6PF.js\";\nimport { l as l2 } from \"./chunk.OXFFPZHD.js\";\nimport { defaultValue } from \"./chunk.ZNRFAEMI.js\";\nimport { FormControlController } from \"./chunk.DOQUAVYF.js\";\nimport { LocalizeController } from \"./chunk.LLXYF66Q.js\";\nimport { HasSlotController } from \"./chunk.3IYPB6RR.js\";\nimport { l } from \"./chunk.V47DPYLL.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { o } from \"./chunk.ORW72H2K.js\";\nimport { ShoelaceElement, e, e2, i, t } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/range/range.ts\nvar SlRange = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlRange, _ShoelaceElement);\n  function SlRange() {\n    var _this;\n    _classCallCheck(this, SlRange);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlRange).apply(this, arguments));\n    _this.formControlController = new FormControlController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.hasSlotController = new HasSlotController(_assertThisInitialized(_assertThisInitialized(_this)), \"help-text\", \"label\");\n    _this.localize = new LocalizeController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.hasFocus = false;\n    _this.hasTooltip = false;\n    _this.title = \"\";\n    _this.name = \"\";\n    _this.value = 0;\n    _this.label = \"\";\n    _this.helpText = \"\";\n    _this.disabled = false;\n    _this.min = 0;\n    _this.max = 100;\n    _this.step = 1;\n    _this.tooltip = \"top\";\n    _this.tooltipFormatter = function (value) {\n      return value.toString();\n    };\n    _this.form = \"\";\n    _this.defaultValue = 0;\n    return _this;\n  }\n  _createClass(SlRange, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var _this2 = this;\n      _get(_getPrototypeOf(SlRange.prototype), \"connectedCallback\", this).call(this);\n      this.resizeObserver = new ResizeObserver(function () {\n        return _this2.syncRange();\n      });\n      if (this.value < this.min) {\n        this.value = this.min;\n      }\n      if (this.value > this.max) {\n        this.value = this.max;\n      }\n      this.updateComplete.then(function () {\n        _this2.syncRange();\n        _this2.resizeObserver.observe(_this2.input);\n      });\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      _get(_getPrototypeOf(SlRange.prototype), \"disconnectedCallback\", this).call(this);\n      this.resizeObserver.unobserve(this.input);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange() {\n      this.emit(\"sl-change\");\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput() {\n      this.value = parseFloat(this.input.value);\n      this.emit(\"sl-input\");\n      this.syncRange();\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.hasFocus = false;\n      this.hasTooltip = false;\n      this.emit(\"sl-blur\");\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      this.hasFocus = true;\n      this.hasTooltip = true;\n      this.emit(\"sl-focus\");\n    }\n  }, {\n    key: \"handleThumbDragStart\",\n    value: function handleThumbDragStart() {\n      this.hasTooltip = true;\n    }\n  }, {\n    key: \"handleThumbDragEnd\",\n    value: function handleThumbDragEnd() {\n      this.hasTooltip = false;\n    }\n  }, {\n    key: \"syncProgress\",\n    value: function syncProgress(percent) {\n      this.input.style.setProperty(\"--percent\", \"\".concat(percent * 100, \"%\"));\n    }\n  }, {\n    key: \"syncTooltip\",\n    value: function syncTooltip(percent) {\n      if (this.output !== null) {\n        var inputWidth = this.input.offsetWidth;\n        var tooltipWidth = this.output.offsetWidth;\n        var thumbSize = getComputedStyle(this.input).getPropertyValue(\"--thumb-size\");\n        var isRtl = this.localize.dir() === \"rtl\";\n        var percentAsWidth = inputWidth * percent;\n        if (isRtl) {\n          var x = \"\".concat(inputWidth - percentAsWidth, \"px + \").concat(percent, \" * \").concat(thumbSize);\n          this.output.style.translate = \"calc((\".concat(x, \" - \").concat(tooltipWidth / 2, \"px - \").concat(thumbSize, \" / 2))\");\n        } else {\n          var _x = \"\".concat(percentAsWidth, \"px - \").concat(percent, \" * \").concat(thumbSize);\n          this.output.style.translate = \"calc(\".concat(_x, \" - \").concat(tooltipWidth / 2, \"px + \").concat(thumbSize, \" / 2)\");\n        }\n      }\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange() {\n      this.formControlController.updateValidity();\n      this.input.value = this.value.toString();\n      this.value = parseFloat(this.input.value);\n      this.syncRange();\n    }\n  }, {\n    key: \"handleDisabledChange\",\n    value: function handleDisabledChange() {\n      this.formControlController.setValidity(this.disabled);\n    }\n  }, {\n    key: \"syncRange\",\n    value: function syncRange() {\n      var percent = Math.max(0, (this.value - this.min) / (this.max - this.min));\n      this.syncProgress(percent);\n      if (this.tooltip !== \"none\") {\n        this.syncTooltip(percent);\n      }\n    } /** Sets focus on the range. */\n  }, {\n    key: \"focus\",\n    value: function focus(options) {\n      this.input.focus(options);\n    } /** Removes focus from the range. */\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    } /** Increments the value of the range by the value of the step attribute. */\n  }, {\n    key: \"stepUp\",\n    value: function stepUp() {\n      this.input.stepUp();\n      if (this.value !== Number(this.input.value)) {\n        this.value = Number(this.input.value);\n      }\n    } /** Decrements the value of the range by the value of the step attribute. */\n  }, {\n    key: \"stepDown\",\n    value: function stepDown() {\n      this.input.stepDown();\n      if (this.value !== Number(this.input.value)) {\n        this.value = Number(this.input.value);\n      }\n    } /** Checks for validity but does not show the browser's validation message. */\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity() {\n      return this.input.checkValidity();\n    } /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  }, {\n    key: \"reportValidity\",\n    value: function reportValidity() {\n      return this.input.reportValidity();\n    } /** Sets a custom validation message. Pass an empty string to restore validity. */\n  }, {\n    key: \"setCustomValidity\",\n    value: function setCustomValidity(message) {\n      this.input.setCustomValidity(message);\n      this.formControlController.updateValidity();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hasLabelSlot = this.hasSlotController.test(\"label\");\n      var hasHelpTextSlot = this.hasSlotController.test(\"help-text\");\n      var hasLabel = this.label ? true : !!hasLabelSlot;\n      var hasHelpText = this.helpText ? true : !!hasHelpTextSlot;\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div\\n        part=\\\"form-control\\\"\\n        class=\", \"\\n      >\\n        <label\\n          part=\\\"form-control-label\\\"\\n          class=\\\"form-control__label\\\"\\n          for=\\\"input\\\"\\n          aria-hidden=\", \"\\n        >\\n          <slot name=\\\"label\\\">\", \"</slot>\\n        </label>\\n\\n        <div part=\\\"form-control-input\\\" class=\\\"form-control-input\\\">\\n          <div\\n            part=\\\"base\\\"\\n            class=\", \"\\n            @mousedown=\", \"\\n            @mouseup=\", \"\\n            @touchstart=\", \"\\n            @touchend=\", \"\\n          >\\n            <input\\n              part=\\\"input\\\"\\n              id=\\\"input\\\"\\n              class=\\\"range__control\\\"\\n              title=\", \"\\n              type=\\\"range\\\"\\n              name=\", \"\\n              ?disabled=\", \"\\n              min=\", \"\\n              max=\", \"\\n              step=\", \"\\n              .value=\", \"\\n              aria-describedby=\\\"help-text\\\"\\n              @change=\", \"\\n              @input=\", \"\\n              @focus=\", \"\\n              @blur=\", \"\\n            />\\n            \", \"\\n          </div>\\n        </div>\\n\\n        <slot\\n          name=\\\"help-text\\\"\\n          part=\\\"form-control-help-text\\\"\\n          id=\\\"help-text\\\"\\n          class=\\\"form-control__help-text\\\"\\n          aria-hidden=\", \"\\n        >\\n          \", \"\\n        </slot>\\n      </div>\\n    \"])), o({\n        \"form-control\": true,\n        \"form-control--medium\": true,\n        // range only has one size\n        \"form-control--has-label\": hasLabel,\n        \"form-control--has-help-text\": hasHelpText\n      }), hasLabel ? \"false\" : \"true\", this.label, o({\n        range: true,\n        \"range--disabled\": this.disabled,\n        \"range--focused\": this.hasFocus,\n        \"range--rtl\": this.localize.dir() === \"rtl\",\n        \"range--tooltip-visible\": this.hasTooltip,\n        \"range--tooltip-top\": this.tooltip === \"top\",\n        \"range--tooltip-bottom\": this.tooltip === \"bottom\"\n      }), this.handleThumbDragStart, this.handleThumbDragEnd, this.handleThumbDragStart, this.handleThumbDragEnd, this.title, l(this.name), this.disabled, l(this.min), l(this.max), l(this.step), l2(this.value.toString()), this.handleChange, this.handleInput, this.handleFocus, this.handleBlur, this.tooltip !== \"none\" && !this.disabled ? y(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n                  <output part=\\\"tooltip\\\" class=\\\"range__tooltip\\\">\\n                    \", \"\\n                  </output>\\n                \"])), typeof this.tooltipFormatter === \"function\" ? this.tooltipFormatter(this.value) : this.value) : \"\", hasHelpText ? \"false\" : \"true\", this.helpText);\n    }\n  }]);\n  return SlRange;\n}(ShoelaceElement);\nSlRange.styles = range_styles_default;\n__decorateClass([i(\".range__control\")], SlRange.prototype, \"input\", 2);\n__decorateClass([i(\".range__tooltip\")], SlRange.prototype, \"output\", 2);\n__decorateClass([t()], SlRange.prototype, \"hasFocus\", 2);\n__decorateClass([t()], SlRange.prototype, \"hasTooltip\", 2);\n__decorateClass([e2()], SlRange.prototype, \"title\", 2);\n__decorateClass([e2()], SlRange.prototype, \"name\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlRange.prototype, \"value\", 2);\n__decorateClass([e2()], SlRange.prototype, \"label\", 2);\n__decorateClass([e2({\n  attribute: \"help-text\"\n})], SlRange.prototype, \"helpText\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlRange.prototype, \"disabled\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlRange.prototype, \"min\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlRange.prototype, \"max\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlRange.prototype, \"step\", 2);\n__decorateClass([e2()], SlRange.prototype, \"tooltip\", 2);\n__decorateClass([e2({\n  attribute: false\n})], SlRange.prototype, \"tooltipFormatter\", 2);\n__decorateClass([e2({\n  reflect: true\n})], SlRange.prototype, \"form\", 2);\n__decorateClass([defaultValue()], SlRange.prototype, \"defaultValue\", 2);\n__decorateClass([watch(\"value\", {\n  waitUntilFirstUpdate: true\n})], SlRange.prototype, \"handleValueChange\", 1);\n__decorateClass([watch(\"disabled\", {\n  waitUntilFirstUpdate: true\n})], SlRange.prototype, \"handleDisabledChange\", 1);\n__decorateClass([watch(\"hasTooltip\", {\n  waitUntilFirstUpdate: true\n})], SlRange.prototype, \"syncRange\", 1);\nSlRange = __decorateClass([e(\"sl-range\")], SlRange);\nexport { SlRange };","map":null,"metadata":{},"sourceType":"module"}