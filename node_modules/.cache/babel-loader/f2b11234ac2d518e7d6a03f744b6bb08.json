{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { drag } from \"./chunk.A4SOQOK5.js\";\nimport { clamp } from \"./chunk.HF7GESMZ.js\";\nimport { i as i2 } from \"./chunk.B6IYY6FB.js\";\nimport { color_picker_styles_default } from \"./chunk.ETPBSV6E.js\";\nimport { defaultValue } from \"./chunk.ZNRFAEMI.js\";\nimport { FormControlController } from \"./chunk.DOQUAVYF.js\";\nimport { LocalizeController } from \"./chunk.LLXYF66Q.js\";\nimport { l } from \"./chunk.V47DPYLL.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { o } from \"./chunk.ORW72H2K.js\";\nimport { ShoelaceElement, e, e2, i, t } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// node_modules/@ctrl/tinycolor/dist/module/util.js\nfunction bound01(n, max) {\n  if (isOnePointZero(n)) {\n    n = \"100%\";\n  }\n  var isPercent = isPercentage(n);\n  n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n  if (isPercent) {\n    n = parseInt(String(n * max), 10) / 100;\n  }\n  if (Math.abs(n - max) < 1e-6) {\n    return 1;\n  }\n  if (max === 360) {\n    n = (n < 0 ? n % max + max : n % max) / parseFloat(String(max));\n  } else {\n    n = n % max / parseFloat(String(max));\n  }\n  return n;\n}\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\nfunction isOnePointZero(n) {\n  return typeof n === \"string\" && n.indexOf(\".\") !== -1 && parseFloat(n) === 1;\n}\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.indexOf(\"%\") !== -1;\n}\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n  return a;\n}\nfunction convertToPercentage(n) {\n  if (n <= 1) {\n    return \"\".concat(Number(n) * 100, \"%\");\n  }\n  return n;\n}\nfunction pad2(c) {\n  return c.length === 1 ? \"0\" + c : String(c);\n}\n\n// node_modules/@ctrl/tinycolor/dist/module/conversion.js\nfunction rgbToRgb(r, g, b) {\n  return {\n    r: bound01(r, 255) * 255,\n    g: bound01(g, 255) * 255,\n    b: bound01(b, 255) * 255\n  };\n}\nfunction rgbToHsl(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var h = 0;\n  var s = 0;\n  var l2 = (max + min) / 2;\n  if (max === min) {\n    s = 0;\n    h = 0;\n  } else {\n    var d = max - min;\n    s = l2 > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n      default:\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    l: l2\n  };\n}\nfunction hue2rgb(p, q, t2) {\n  if (t2 < 0) {\n    t2 += 1;\n  }\n  if (t2 > 1) {\n    t2 -= 1;\n  }\n  if (t2 < 1 / 6) {\n    return p + (q - p) * (6 * t2);\n  }\n  if (t2 < 1 / 2) {\n    return q;\n  }\n  if (t2 < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t2) * 6;\n  }\n  return p;\n}\nfunction hslToRgb(h, s, l2) {\n  var r;\n  var g;\n  var b;\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l2 = bound01(l2, 100);\n  if (s === 0) {\n    g = l2;\n    b = l2;\n    r = l2;\n  } else {\n    var q = l2 < 0.5 ? l2 * (1 + s) : l2 + s - l2 * s;\n    var p = 2 * l2 - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\nfunction rgbToHsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var h = 0;\n  var v = max;\n  var d = max - min;\n  var s = max === 0 ? 0 : d / max;\n  if (max === min) {\n    h = 0;\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n      default:\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    v: v\n  };\n}\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n  var i3 = Math.floor(h);\n  var f = h - i3;\n  var p = v * (1 - s);\n  var q = v * (1 - f * s);\n  var t2 = v * (1 - (1 - f) * s);\n  var mod = i3 % 6;\n  var r = [v, q, p, p, t2, v][mod];\n  var g = [t2, v, v, q, p, p][mod];\n  var b = [p, p, t2, v, v, q][mod];\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\nfunction rgbToHex(r, g, b, allow3Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n  if (allow3Char && hex[0].startsWith(hex[0].charAt(1)) && hex[1].startsWith(hex[1].charAt(1)) && hex[2].startsWith(hex[2].charAt(1))) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n  }\n  return hex.join(\"\");\n}\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];\n  if (allow4Char && hex[0].startsWith(hex[0].charAt(1)) && hex[1].startsWith(hex[1].charAt(1)) && hex[2].startsWith(hex[2].charAt(1)) && hex[3].startsWith(hex[3].charAt(1))) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n  }\n  return hex.join(\"\");\n}\nfunction convertDecimalToHex(d) {\n  return Math.round(parseFloat(d) * 255).toString(16);\n}\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n}\nfunction numberInputToObject(color) {\n  return {\n    r: color >> 16,\n    g: (color & 65280) >> 8,\n    b: color & 255\n  };\n}\n\n// node_modules/@ctrl/tinycolor/dist/module/css-color-names.js\nvar names = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkgrey: \"#a9a9a9\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkslategrey: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dimgrey: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  goldenrod: \"#daa520\",\n  gold: \"#ffd700\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  grey: \"#808080\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavenderblush: \"#fff0f5\",\n  lavender: \"#e6e6fa\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgray: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightgrey: \"#d3d3d3\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightslategrey: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370db\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#db7093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  slategrey: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\"\n};\n\n// node_modules/@ctrl/tinycolor/dist/module/format-input.js\nfunction inputToRGB(color) {\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  var a = 1;\n  var s = null;\n  var v = null;\n  var l2 = null;\n  var ok = false;\n  var format = false;\n  if (typeof color === \"string\") {\n    color = stringInputToObject(color);\n  }\n  if (typeof color === \"object\") {\n    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n      s = convertToPercentage(color.s);\n      v = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v);\n      ok = true;\n      format = \"hsv\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n      s = convertToPercentage(color.s);\n      l2 = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l2);\n      ok = true;\n      format = \"hsl\";\n    }\n    if (Object.prototype.hasOwnProperty.call(color, \"a\")) {\n      a = color.a;\n    }\n  }\n  a = boundAlpha(a);\n  return {\n    ok: ok,\n    format: color.format || format,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a: a\n  };\n}\nvar CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\nvar CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\nvar CSS_UNIT = \"(?:\".concat(CSS_NUMBER, \")|(?:\").concat(CSS_INTEGER, \")\");\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar matchers = {\n  CSS_UNIT: new RegExp(CSS_UNIT),\n  rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n  rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n  hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n  hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n  hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n  hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n};\nfunction stringInputToObject(color) {\n  color = color.trim().toLowerCase();\n  if (color.length === 0) {\n    return false;\n  }\n  var named = false;\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color === \"transparent\") {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 0,\n      format: \"name\"\n    };\n  }\n  var match = matchers.rgb.exec(color);\n  if (match) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3]\n    };\n  }\n  match = matchers.rgba.exec(color);\n  if (match) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3],\n      a: match[4]\n    };\n  }\n  match = matchers.hsl.exec(color);\n  if (match) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3]\n    };\n  }\n  match = matchers.hsla.exec(color);\n  if (match) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3],\n      a: match[4]\n    };\n  }\n  match = matchers.hsv.exec(color);\n  if (match) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3]\n    };\n  }\n  match = matchers.hsva.exec(color);\n  if (match) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3],\n      a: match[4]\n    };\n  }\n  match = matchers.hex8.exec(color);\n  if (match) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  match = matchers.hex6.exec(color);\n  if (match) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  match = matchers.hex4.exec(color);\n  if (match) {\n    return {\n      r: parseIntFromHex(match[1] + match[1]),\n      g: parseIntFromHex(match[2] + match[2]),\n      b: parseIntFromHex(match[3] + match[3]),\n      a: convertHexToDecimal(match[4] + match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  match = matchers.hex3.exec(color);\n  if (match) {\n    return {\n      r: parseIntFromHex(match[1] + match[1]),\n      g: parseIntFromHex(match[2] + match[2]),\n      b: parseIntFromHex(match[3] + match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  return false;\n}\nfunction isValidCSSUnit(color) {\n  return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n\n// node_modules/@ctrl/tinycolor/dist/module/index.js\nvar TinyColor = /** @class */\nfunction () {\n  function TinyColor2(color, opts) {\n    if (color === void 0) {\n      color = \"\";\n    }\n    if (opts === void 0) {\n      opts = {};\n    }\n    var _a;\n    if (color instanceof TinyColor2) {\n      return color;\n    }\n    if (typeof color === \"number\") {\n      color = numberInputToObject(color);\n    }\n    this.originalInput = color;\n    var rgb = inputToRGB(color);\n    this.originalInput = color;\n    this.r = rgb.r;\n    this.g = rgb.g;\n    this.b = rgb.b;\n    this.a = rgb.a;\n    this.roundA = Math.round(100 * this.a) / 100;\n    this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n    this.gradientType = opts.gradientType;\n    if (this.r < 1) {\n      this.r = Math.round(this.r);\n    }\n    if (this.g < 1) {\n      this.g = Math.round(this.g);\n    }\n    if (this.b < 1) {\n      this.b = Math.round(this.b);\n    }\n    this.isValid = rgb.ok;\n  }\n  TinyColor2.prototype.isDark = function () {\n    return this.getBrightness() < 128;\n  };\n  TinyColor2.prototype.isLight = function () {\n    return !this.isDark();\n  };\n  TinyColor2.prototype.getBrightness = function () {\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;\n  };\n  TinyColor2.prototype.getLuminance = function () {\n    var rgb = this.toRgb();\n    var R;\n    var G;\n    var B;\n    var RsRGB = rgb.r / 255;\n    var GsRGB = rgb.g / 255;\n    var BsRGB = rgb.b / 255;\n    if (RsRGB <= 0.03928) {\n      R = RsRGB / 12.92;\n    } else {\n      R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    }\n    if (GsRGB <= 0.03928) {\n      G = GsRGB / 12.92;\n    } else {\n      G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    }\n    if (BsRGB <= 0.03928) {\n      B = BsRGB / 12.92;\n    } else {\n      B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    }\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  };\n  TinyColor2.prototype.getAlpha = function () {\n    return this.a;\n  };\n  TinyColor2.prototype.setAlpha = function (alpha) {\n    this.a = boundAlpha(alpha);\n    this.roundA = Math.round(100 * this.a) / 100;\n    return this;\n  };\n  TinyColor2.prototype.isMonochrome = function () {\n    var s = this.toHsl().s;\n    return s === 0;\n  };\n  TinyColor2.prototype.toHsv = function () {\n    var hsv = rgbToHsv(this.r, this.g, this.b);\n    return {\n      h: hsv.h * 360,\n      s: hsv.s,\n      v: hsv.v,\n      a: this.a\n    };\n  };\n  TinyColor2.prototype.toHsvString = function () {\n    var hsv = rgbToHsv(this.r, this.g, this.b);\n    var h = Math.round(hsv.h * 360);\n    var s = Math.round(hsv.s * 100);\n    var v = Math.round(hsv.v * 100);\n    return this.a === 1 ? \"hsv(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%)\") : \"hsva(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%, \").concat(this.roundA, \")\");\n  };\n  TinyColor2.prototype.toHsl = function () {\n    var hsl = rgbToHsl(this.r, this.g, this.b);\n    return {\n      h: hsl.h * 360,\n      s: hsl.s,\n      l: hsl.l,\n      a: this.a\n    };\n  };\n  TinyColor2.prototype.toHslString = function () {\n    var hsl = rgbToHsl(this.r, this.g, this.b);\n    var h = Math.round(hsl.h * 360);\n    var s = Math.round(hsl.s * 100);\n    var l2 = Math.round(hsl.l * 100);\n    return this.a === 1 ? \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l2, \"%)\") : \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l2, \"%, \").concat(this.roundA, \")\");\n  };\n  TinyColor2.prototype.toHex = function (allow3Char) {\n    if (allow3Char === void 0) {\n      allow3Char = false;\n    }\n    return rgbToHex(this.r, this.g, this.b, allow3Char);\n  };\n  TinyColor2.prototype.toHexString = function (allow3Char) {\n    if (allow3Char === void 0) {\n      allow3Char = false;\n    }\n    return \"#\" + this.toHex(allow3Char);\n  };\n  TinyColor2.prototype.toHex8 = function (allow4Char) {\n    if (allow4Char === void 0) {\n      allow4Char = false;\n    }\n    return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n  };\n  TinyColor2.prototype.toHex8String = function (allow4Char) {\n    if (allow4Char === void 0) {\n      allow4Char = false;\n    }\n    return \"#\" + this.toHex8(allow4Char);\n  };\n  TinyColor2.prototype.toRgb = function () {\n    return {\n      r: Math.round(this.r),\n      g: Math.round(this.g),\n      b: Math.round(this.b),\n      a: this.a\n    };\n  };\n  TinyColor2.prototype.toRgbString = function () {\n    var r = Math.round(this.r);\n    var g = Math.round(this.g);\n    var b = Math.round(this.b);\n    return this.a === 1 ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(this.roundA, \")\");\n  };\n  TinyColor2.prototype.toPercentageRgb = function () {\n    var fmt = function fmt(x) {\n      return \"\".concat(Math.round(bound01(x, 255) * 100), \"%\");\n    };\n    return {\n      r: fmt(this.r),\n      g: fmt(this.g),\n      b: fmt(this.b),\n      a: this.a\n    };\n  };\n  TinyColor2.prototype.toPercentageRgbString = function () {\n    var rnd = function rnd(x) {\n      return Math.round(bound01(x, 255) * 100);\n    };\n    return this.a === 1 ? \"rgb(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%)\") : \"rgba(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%, \").concat(this.roundA, \")\");\n  };\n  TinyColor2.prototype.toName = function () {\n    if (this.a === 0) {\n      return \"transparent\";\n    }\n    if (this.a < 1) {\n      return false;\n    }\n    var hex = \"#\" + rgbToHex(this.r, this.g, this.b, false);\n    for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n      var _b = _a[_i],\n        key = _b[0],\n        value = _b[1];\n      if (hex === value) {\n        return key;\n      }\n    }\n    return false;\n  };\n  TinyColor2.prototype.toString = function (format) {\n    var formatSet = Boolean(format);\n    format = format !== null && format !== void 0 ? format : this.format;\n    var formattedString = false;\n    var hasAlpha = this.a < 1 && this.a >= 0;\n    var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith(\"hex\") || format === \"name\");\n    if (needsAlphaFormat) {\n      if (format === \"name\" && this.a === 0) {\n        return this.toName();\n      }\n      return this.toRgbString();\n    }\n    if (format === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n    if (format === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n    if (format === \"hex\" || format === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n    if (format === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n    if (format === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n    if (format === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n    if (format === \"name\") {\n      formattedString = this.toName();\n    }\n    if (format === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n    if (format === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n    return formattedString || this.toHexString();\n  };\n  TinyColor2.prototype.toNumber = function () {\n    return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n  };\n  TinyColor2.prototype.clone = function () {\n    return new TinyColor2(this.toString());\n  };\n  TinyColor2.prototype.lighten = function (amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var hsl = this.toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.brighten = function (amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var rgb = this.toRgb();\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n    return new TinyColor2(rgb);\n  };\n  TinyColor2.prototype.darken = function (amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var hsl = this.toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.tint = function (amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    return this.mix(\"white\", amount);\n  };\n  TinyColor2.prototype.shade = function (amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    return this.mix(\"black\", amount);\n  };\n  TinyColor2.prototype.desaturate = function (amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var hsl = this.toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.saturate = function (amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var hsl = this.toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.greyscale = function () {\n    return this.desaturate(100);\n  };\n  TinyColor2.prototype.spin = function (amount) {\n    var hsl = this.toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.mix = function (color, amount) {\n    if (amount === void 0) {\n      amount = 50;\n    }\n    var rgb1 = this.toRgb();\n    var rgb2 = new TinyColor2(color).toRgb();\n    var p = amount / 100;\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a\n    };\n    return new TinyColor2(rgba);\n  };\n  TinyColor2.prototype.analogous = function (results, slices) {\n    if (results === void 0) {\n      results = 6;\n    }\n    if (slices === void 0) {\n      slices = 30;\n    }\n    var hsl = this.toHsl();\n    var part = 360 / slices;\n    var ret = [this];\n    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(new TinyColor2(hsl));\n    }\n    return ret;\n  };\n  TinyColor2.prototype.complement = function () {\n    var hsl = this.toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.monochromatic = function (results) {\n    if (results === void 0) {\n      results = 6;\n    }\n    var hsv = this.toHsv();\n    var h = hsv.h;\n    var s = hsv.s;\n    var v = hsv.v;\n    var res = [];\n    var modification = 1 / results;\n    while (results--) {\n      res.push(new TinyColor2({\n        h: h,\n        s: s,\n        v: v\n      }));\n      v = (v + modification) % 1;\n    }\n    return res;\n  };\n  TinyColor2.prototype.splitcomplement = function () {\n    var hsl = this.toHsl();\n    var h = hsl.h;\n    return [this, new TinyColor2({\n      h: (h + 72) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), new TinyColor2({\n      h: (h + 216) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  };\n  TinyColor2.prototype.onBackground = function (background) {\n    var fg = this.toRgb();\n    var bg = new TinyColor2(background).toRgb();\n    return new TinyColor2({\n      r: bg.r + (fg.r - bg.r) * fg.a,\n      g: bg.g + (fg.g - bg.g) * fg.a,\n      b: bg.b + (fg.b - bg.b) * fg.a\n    });\n  };\n  TinyColor2.prototype.triad = function () {\n    return this.polyad(3);\n  };\n  TinyColor2.prototype.tetrad = function () {\n    return this.polyad(4);\n  };\n  TinyColor2.prototype.polyad = function (n) {\n    var hsl = this.toHsl();\n    var h = hsl.h;\n    var result = [this];\n    var increment = 360 / n;\n    for (var i3 = 1; i3 < n; i3++) {\n      result.push(new TinyColor2({\n        h: (h + i3 * increment) % 360,\n        s: hsl.s,\n        l: hsl.l\n      }));\n    }\n    return result;\n  };\n  TinyColor2.prototype.equals = function (color) {\n    return this.toRgbString() === new TinyColor2(color).toRgbString();\n  };\n  return TinyColor2;\n}();\n\n// src/components/color-picker/color-picker.ts\nvar hasEyeDropper = (\"EyeDropper\" in window);\nvar SlColorPicker = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlColorPicker, _ShoelaceElement);\n  function SlColorPicker() {\n    var _this;\n    _classCallCheck(this, SlColorPicker);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlColorPicker).apply(this, arguments));\n    _this.formControlController = new FormControlController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isSafeValue = false;\n    _this.localize = new LocalizeController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isDraggingGridHandle = false;\n    _this.isEmpty = false;\n    _this.inputValue = \"\";\n    _this.hue = 0;\n    _this.saturation = 100;\n    _this.brightness = 100;\n    _this.alpha = 100;\n    _this.value = \"\";\n    _this.defaultValue = \"\";\n    _this.label = \"\";\n    _this.format = \"hex\";\n    _this.inline = false;\n    _this.size = \"medium\";\n    _this.noFormatToggle = false;\n    _this.name = \"\";\n    _this.disabled = false;\n    _this.hoist = false;\n    _this.opacity = false;\n    _this.uppercase = false;\n    _this.swatches = \"\";\n    _this.form = \"\";\n    return _this;\n  }\n  _createClass(SlColorPicker, [{\n    key: \"handleCopy\",\n    value: function handleCopy() {\n      var _this2 = this;\n      this.input.select();\n      document.execCommand(\"copy\");\n      this.previewButton.focus();\n      this.previewButton.classList.add(\"color-picker__preview-color--copied\");\n      this.previewButton.addEventListener(\"animationend\", function () {\n        _this2.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n      });\n    }\n  }, {\n    key: \"handleFormatToggle\",\n    value: function handleFormatToggle() {\n      var formats = [\"hex\", \"rgb\", \"hsl\", \"hsv\"];\n      var nextIndex = (formats.indexOf(this.format) + 1) % formats.length;\n      this.format = formats[nextIndex];\n      this.setColor(this.value);\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }, {\n    key: \"handleAlphaDrag\",\n    value: function handleAlphaDrag(event) {\n      var _this3 = this;\n      var container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__alpha\");\n      var handle = container.querySelector(\".color-picker__slider-handle\");\n      var _container$getBoundin = container.getBoundingClientRect(),\n        width = _container$getBoundin.width;\n      var oldValue = this.value;\n      handle.focus();\n      event.preventDefault();\n      drag(container, {\n        onMove: function onMove(x) {\n          _this3.alpha = clamp(x / width * 100, 0, 100);\n          _this3.syncValues();\n          if (_this3.value !== oldValue) {\n            oldValue = _this3.value;\n            _this3.emit(\"sl-change\");\n            _this3.emit(\"sl-input\");\n          }\n        },\n        initialEvent: event\n      });\n    }\n  }, {\n    key: \"handleHueDrag\",\n    value: function handleHueDrag(event) {\n      var _this4 = this;\n      var container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__hue\");\n      var handle = container.querySelector(\".color-picker__slider-handle\");\n      var _container$getBoundin2 = container.getBoundingClientRect(),\n        width = _container$getBoundin2.width;\n      var oldValue = this.value;\n      handle.focus();\n      event.preventDefault();\n      drag(container, {\n        onMove: function onMove(x) {\n          _this4.hue = clamp(x / width * 360, 0, 360);\n          _this4.syncValues();\n          if (_this4.value !== oldValue) {\n            oldValue = _this4.value;\n            _this4.emit(\"sl-change\");\n            _this4.emit(\"sl-input\");\n          }\n        },\n        initialEvent: event\n      });\n    }\n  }, {\n    key: \"handleGridDrag\",\n    value: function handleGridDrag(event) {\n      var _this5 = this;\n      var grid = this.shadowRoot.querySelector(\".color-picker__grid\");\n      var handle = grid.querySelector(\".color-picker__grid-handle\");\n      var _grid$getBoundingClie = grid.getBoundingClientRect(),\n        width = _grid$getBoundingClie.width,\n        height = _grid$getBoundingClie.height;\n      var oldValue = this.value;\n      handle.focus();\n      event.preventDefault();\n      this.isDraggingGridHandle = true;\n      drag(grid, {\n        onMove: function onMove(x, y2) {\n          _this5.saturation = clamp(x / width * 100, 0, 100);\n          _this5.brightness = clamp(100 - y2 / height * 100, 0, 100);\n          _this5.syncValues();\n          if (_this5.value !== oldValue) {\n            oldValue = _this5.value;\n            _this5.emit(\"sl-change\");\n            _this5.emit(\"sl-input\");\n          }\n        },\n        onStop: function onStop() {\n          return _this5.isDraggingGridHandle = false;\n        },\n        initialEvent: event\n      });\n    }\n  }, {\n    key: \"handleAlphaKeyDown\",\n    value: function handleAlphaKeyDown(event) {\n      var increment = event.shiftKey ? 10 : 1;\n      var oldValue = this.value;\n      if (event.key === \"ArrowLeft\") {\n        event.preventDefault();\n        this.alpha = clamp(this.alpha - increment, 0, 100);\n        this.syncValues();\n      }\n      if (event.key === \"ArrowRight\") {\n        event.preventDefault();\n        this.alpha = clamp(this.alpha + increment, 0, 100);\n        this.syncValues();\n      }\n      if (event.key === \"Home\") {\n        event.preventDefault();\n        this.alpha = 0;\n        this.syncValues();\n      }\n      if (event.key === \"End\") {\n        event.preventDefault();\n        this.alpha = 100;\n        this.syncValues();\n      }\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }, {\n    key: \"handleHueKeyDown\",\n    value: function handleHueKeyDown(event) {\n      var increment = event.shiftKey ? 10 : 1;\n      var oldValue = this.value;\n      if (event.key === \"ArrowLeft\") {\n        event.preventDefault();\n        this.hue = clamp(this.hue - increment, 0, 360);\n        this.syncValues();\n      }\n      if (event.key === \"ArrowRight\") {\n        event.preventDefault();\n        this.hue = clamp(this.hue + increment, 0, 360);\n        this.syncValues();\n      }\n      if (event.key === \"Home\") {\n        event.preventDefault();\n        this.hue = 0;\n        this.syncValues();\n      }\n      if (event.key === \"End\") {\n        event.preventDefault();\n        this.hue = 360;\n        this.syncValues();\n      }\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }, {\n    key: \"handleGridKeyDown\",\n    value: function handleGridKeyDown(event) {\n      var increment = event.shiftKey ? 10 : 1;\n      var oldValue = this.value;\n      if (event.key === \"ArrowLeft\") {\n        event.preventDefault();\n        this.saturation = clamp(this.saturation - increment, 0, 100);\n        this.syncValues();\n      }\n      if (event.key === \"ArrowRight\") {\n        event.preventDefault();\n        this.saturation = clamp(this.saturation + increment, 0, 100);\n        this.syncValues();\n      }\n      if (event.key === \"ArrowUp\") {\n        event.preventDefault();\n        this.brightness = clamp(this.brightness + increment, 0, 100);\n        this.syncValues();\n      }\n      if (event.key === \"ArrowDown\") {\n        event.preventDefault();\n        this.brightness = clamp(this.brightness - increment, 0, 100);\n        this.syncValues();\n      }\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var oldValue = this.value;\n      event.stopPropagation();\n      if (this.input.value) {\n        this.setColor(target.value);\n        target.value = this.value;\n      } else {\n        this.value = \"\";\n      }\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }, {\n    key: \"handleInputInput\",\n    value: function handleInputInput(event) {\n      event.stopPropagation();\n    }\n  }, {\n    key: \"handleInputKeyDown\",\n    value: function handleInputKeyDown(event) {\n      var _this6 = this;\n      if (event.key === \"Enter\") {\n        var oldValue = this.value;\n        if (this.input.value) {\n          this.setColor(this.input.value);\n          this.input.value = this.value;\n          if (this.value !== oldValue) {\n            this.emit(\"sl-change\");\n            this.emit(\"sl-input\");\n          }\n          setTimeout(function () {\n            return _this6.input.select();\n          });\n        } else {\n          this.hue = 0;\n        }\n      }\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"parseColor\",\n    value: function parseColor(colorString) {\n      var color = new TinyColor(colorString);\n      if (!color.isValid) {\n        return null;\n      }\n      var hslColor = color.toHsl();\n      var hsl = {\n        h: hslColor.h,\n        s: hslColor.s * 100,\n        l: hslColor.l * 100,\n        a: hslColor.a\n      };\n      var rgb = color.toRgb();\n      var hex = color.toHexString();\n      var hexa = color.toHex8String();\n      var hsvColor = color.toHsv();\n      var hsv = {\n        h: hsvColor.h,\n        s: hsvColor.s * 100,\n        v: hsvColor.v * 100,\n        a: hsvColor.a\n      };\n      return {\n        hsl: {\n          h: hsl.h,\n          s: hsl.s,\n          l: hsl.l,\n          string: this.setLetterCase(\"hsl(\".concat(Math.round(hsl.h), \", \").concat(Math.round(hsl.s), \"%, \").concat(Math.round(hsl.l), \"%)\"))\n        },\n        hsla: {\n          h: hsl.h,\n          s: hsl.s,\n          l: hsl.l,\n          a: hsl.a,\n          string: this.setLetterCase(\"hsla(\".concat(Math.round(hsl.h), \", \").concat(Math.round(hsl.s), \"%, \").concat(Math.round(hsl.l), \"%, \").concat(hsl.a.toFixed(2).toString(), \")\"))\n        },\n        hsv: {\n          h: hsv.h,\n          s: hsv.s,\n          v: hsv.v,\n          string: this.setLetterCase(\"hsv(\".concat(Math.round(hsv.h), \", \").concat(Math.round(hsv.s), \"%, \").concat(Math.round(hsv.v), \"%)\"))\n        },\n        hsva: {\n          h: hsv.h,\n          s: hsv.s,\n          v: hsv.v,\n          a: hsv.a,\n          string: this.setLetterCase(\"hsva(\".concat(Math.round(hsv.h), \", \").concat(Math.round(hsv.s), \"%, \").concat(Math.round(hsv.v), \"%, \").concat(hsv.a.toFixed(2).toString(), \")\"))\n        },\n        rgb: {\n          r: rgb.r,\n          g: rgb.g,\n          b: rgb.b,\n          string: this.setLetterCase(\"rgb(\".concat(Math.round(rgb.r), \", \").concat(Math.round(rgb.g), \", \").concat(Math.round(rgb.b), \")\"))\n        },\n        rgba: {\n          r: rgb.r,\n          g: rgb.g,\n          b: rgb.b,\n          a: rgb.a,\n          string: this.setLetterCase(\"rgba(\".concat(Math.round(rgb.r), \", \").concat(Math.round(rgb.g), \", \").concat(Math.round(rgb.b), \", \").concat(rgb.a.toFixed(2).toString(), \")\"))\n        },\n        hex: this.setLetterCase(hex),\n        hexa: this.setLetterCase(hexa)\n      };\n    }\n  }, {\n    key: \"setColor\",\n    value: function setColor(colorString) {\n      var newColor = this.parseColor(colorString);\n      if (newColor === null) {\n        return false;\n      }\n      this.hue = newColor.hsva.h;\n      this.saturation = newColor.hsva.s;\n      this.brightness = newColor.hsva.v;\n      this.alpha = this.opacity ? newColor.hsva.a * 100 : 100;\n      this.syncValues();\n      return true;\n    }\n  }, {\n    key: \"setLetterCase\",\n    value: function setLetterCase(string) {\n      if (typeof string !== \"string\") {\n        return \"\";\n      }\n      return this.uppercase ? string.toUpperCase() : string.toLowerCase();\n    }\n  }, {\n    key: \"syncValues\",\n    value: function () {\n      var _syncValues = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var currentColor;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              currentColor = this.parseColor(\"hsva(\".concat(this.hue, \", \").concat(this.saturation, \"%, \").concat(this.brightness, \"%, \").concat(this.alpha / 100, \")\"));\n              if (!(currentColor === null)) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              if (this.format === \"hsl\") {\n                this.inputValue = this.opacity ? currentColor.hsla.string : currentColor.hsl.string;\n              } else if (this.format === \"rgb\") {\n                this.inputValue = this.opacity ? currentColor.rgba.string : currentColor.rgb.string;\n              } else if (this.format === \"hsv\") {\n                this.inputValue = this.opacity ? currentColor.hsva.string : currentColor.hsv.string;\n              } else {\n                this.inputValue = this.opacity ? currentColor.hexa : currentColor.hex;\n              }\n              this.isSafeValue = true;\n              this.value = this.inputValue;\n              _context.next = 8;\n              return this.updateComplete;\n            case 8:\n              this.isSafeValue = false;\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function syncValues() {\n        return _syncValues.apply(this, arguments);\n      }\n      return syncValues;\n    }()\n  }, {\n    key: \"handleAfterHide\",\n    value: function handleAfterHide() {\n      this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n    }\n  }, {\n    key: \"handleEyeDropper\",\n    value: function handleEyeDropper() {\n      var _this7 = this;\n      if (!hasEyeDropper) {\n        return;\n      }\n      var eyeDropper = new EyeDropper();\n      eyeDropper.open().then(function (colorSelectionResult) {\n        return _this7.setColor(colorSelectionResult.sRGBHex);\n      }).catch(function () {});\n    }\n  }, {\n    key: \"selectSwatch\",\n    value: function selectSwatch(color) {\n      var oldValue = this.value;\n      if (!this.disabled) {\n        this.setColor(color);\n        if (this.value !== oldValue) {\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n      }\n    } /** Generates a hex string from HSV values. Hue must be 0-360. All other arguments must be 0-100. */\n  }, {\n    key: \"getHexString\",\n    value: function getHexString(hue, saturation, brightness) {\n      var alpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 100;\n      var color = new TinyColor(\"hsva(\".concat(hue, \", \").concat(saturation, \", \").concat(brightness, \", \").concat(alpha / 100, \")\"));\n      if (!color.isValid) {\n        return \"\";\n      }\n      return color.toHex8String();\n    }\n  }, {\n    key: \"handleFormatChange\",\n    value: function handleFormatChange() {\n      this.syncValues();\n    }\n  }, {\n    key: \"handleOpacityChange\",\n    value: function handleOpacityChange() {\n      this.alpha = 100;\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange(oldValue, newValue) {\n      this.isEmpty = !newValue;\n      if (!newValue) {\n        this.hue = 0;\n        this.saturation = 0;\n        this.brightness = 100;\n        this.alpha = 100;\n      }\n      if (!this.isSafeValue) {\n        var newColor = this.parseColor(newValue);\n        if (newColor !== null) {\n          this.inputValue = this.value;\n          this.hue = newColor.hsva.h;\n          this.saturation = newColor.hsva.s;\n          this.brightness = newColor.hsva.v;\n          this.alpha = newColor.hsva.a * 100;\n          this.syncValues();\n        } else {\n          this.inputValue = oldValue != null ? oldValue : \"\";\n        }\n      }\n    } /** Returns the current value as a string in the specified format. */\n  }, {\n    key: \"getFormattedValue\",\n    value: function getFormattedValue() {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"hex\";\n      var currentColor = this.parseColor(\"hsva(\".concat(this.hue, \", \").concat(this.saturation, \"%, \").concat(this.brightness, \"%, \").concat(this.alpha / 100, \")\"));\n      if (currentColor === null) {\n        return \"\";\n      }\n      switch (format) {\n        case \"hex\":\n          return currentColor.hex;\n        case \"hexa\":\n          return currentColor.hexa;\n        case \"rgb\":\n          return currentColor.rgb.string;\n        case \"rgba\":\n          return currentColor.rgba.string;\n        case \"hsl\":\n          return currentColor.hsl.string;\n        case \"hsla\":\n          return currentColor.hsla.string;\n        case \"hsv\":\n          return currentColor.hsv.string;\n        case \"hsva\":\n          return currentColor.hsva.string;\n        default:\n          return \"\";\n      }\n    } /** Checks for validity but does not show the browser's validation message. */\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity() {\n      return this.input.checkValidity();\n    } /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  }, {\n    key: \"reportValidity\",\n    value: function reportValidity() {\n      var _this8 = this;\n      if (!this.inline && !this.checkValidity()) {\n        this.dropdown.show();\n        this.addEventListener(\"sl-after-show\", function () {\n          return _this8.input.reportValidity();\n        }, {\n          once: true\n        });\n        return this.checkValidity();\n      }\n      return this.input.reportValidity();\n    } /** Sets a custom validation message. Pass an empty string to restore validity. */\n  }, {\n    key: \"setCustomValidity\",\n    value: function setCustomValidity(message) {\n      this.input.setCustomValidity(message);\n      this.formControlController.updateValidity();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n      var gridHandleX = this.saturation;\n      var gridHandleY = 100 - this.brightness;\n      var swatches = Array.isArray(this.swatches) ? this.swatches : this.swatches.split(\";\").filter(function (color) {\n        return color.trim() !== \"\";\n      });\n      var colorPicker = y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div\\n        part=\\\"base\\\"\\n        class=\", \"\\n        aria-disabled=\", \"\\n        aria-labelledby=\\\"label\\\"\\n        tabindex=\", \"\\n      >\\n        \", \"\\n\\n        <div\\n          part=\\\"grid\\\"\\n          class=\\\"color-picker__grid\\\"\\n          style=\", \"\\n          @pointerdown=\", \"\\n          @touchmove=\", \"\\n        >\\n          <span\\n            part=\\\"grid-handle\\\"\\n            class=\", \"\\n            style=\", \"\\n            role=\\\"application\\\"\\n            aria-label=\\\"HSV\\\"\\n            tabindex=\", \"\\n            @keydown=\", \"\\n          ></span>\\n        </div>\\n\\n        <div class=\\\"color-picker__controls\\\">\\n          <div class=\\\"color-picker__sliders\\\">\\n            <div\\n              part=\\\"slider hue-slider\\\"\\n              class=\\\"color-picker__hue color-picker__slider\\\"\\n              @pointerdown=\", \"\\n              @touchmove=\", \"\\n            >\\n              <span\\n                part=\\\"slider-handle hue-slider-handle\\\"\\n                class=\\\"color-picker__slider-handle\\\"\\n                style=\", \"\\n                role=\\\"slider\\\"\\n                aria-label=\\\"hue\\\"\\n                aria-orientation=\\\"horizontal\\\"\\n                aria-valuemin=\\\"0\\\"\\n                aria-valuemax=\\\"360\\\"\\n                aria-valuenow=\", \"\\n                tabindex=\", \"\\n                @keydown=\", \"\\n              ></span>\\n            </div>\\n\\n            \", \"\\n          </div>\\n\\n          <button\\n            type=\\\"button\\\"\\n            part=\\\"preview\\\"\\n            class=\\\"color-picker__preview color-picker__transparent-bg\\\"\\n            aria-label=\", \"\\n            style=\", \"\\n            @click=\", \"\\n          ></button>\\n        </div>\\n\\n        <div class=\\\"color-picker__user-input\\\" aria-live=\\\"polite\\\">\\n          <sl-input\\n            part=\\\"input\\\"\\n            type=\\\"text\\\"\\n            name=\", \"\\n            autocomplete=\\\"off\\\"\\n            autocorrect=\\\"off\\\"\\n            autocapitalize=\\\"off\\\"\\n            spellcheck=\\\"false\\\"\\n            value=\", \"\\n            ?disabled=\", \"\\n            aria-label=\", \"\\n            @keydown=\", \"\\n            @sl-change=\", \"\\n            @sl-input=\", \"\\n          ></sl-input>\\n\\n          <sl-button-group>\\n            \", \"\\n            \", \"\\n          </sl-button-group>\\n        </div>\\n\\n        \", \"\\n      </div>\\n    \"])), o({\n        \"color-picker\": true,\n        \"color-picker--inline\": this.inline,\n        \"color-picker--disabled\": this.disabled\n      }), this.disabled ? \"true\" : \"false\", this.inline ? \"0\" : \"-1\", this.inline ? y(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n              <sl-visually-hidden id=\\\"label\\\">\\n                <slot name=\\\"label\\\">\", \"</slot>\\n              </sl-visually-hidden>\\n            \"])), this.label) : null, i2({\n        backgroundColor: this.getHexString(this.hue, 100, 100)\n      }), this.handleGridDrag, this.handleTouchMove, o({\n        \"color-picker__grid-handle\": true,\n        \"color-picker__grid-handle--dragging\": this.isDraggingGridHandle\n      }), i2({\n        top: \"\".concat(gridHandleY, \"%\"),\n        left: \"\".concat(gridHandleX, \"%\"),\n        backgroundColor: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n      }), l(this.disabled ? void 0 : \"0\"), this.handleGridKeyDown, this.handleHueDrag, this.handleTouchMove, i2({\n        left: \"\".concat(this.hue === 0 ? 0 : 100 / (360 / this.hue), \"%\")\n      }), \"\".concat(Math.round(this.hue)), l(this.disabled ? void 0 : \"0\"), this.handleHueKeyDown, this.opacity ? y(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                  <div\\n                    part=\\\"slider opacity-slider\\\"\\n                    class=\\\"color-picker__alpha color-picker__slider color-picker__transparent-bg\\\"\\n                    @pointerdown=\\\"\", \"\\\"\\n                    @touchmove=\", \"\\n                  >\\n                    <div\\n                      class=\\\"color-picker__alpha-gradient\\\"\\n                      style=\", \"\\n                    ></div>\\n                    <span\\n                      part=\\\"slider-handle opacity-slider-handle\\\"\\n                      class=\\\"color-picker__slider-handle\\\"\\n                      style=\", \"\\n                      role=\\\"slider\\\"\\n                      aria-label=\\\"alpha\\\"\\n                      aria-orientation=\\\"horizontal\\\"\\n                      aria-valuemin=\\\"0\\\"\\n                      aria-valuemax=\\\"100\\\"\\n                      aria-valuenow=\", \"\\n                      tabindex=\", \"\\n                      @keydown=\", \"\\n                    ></span>\\n                  </div>\\n                \"])), this.handleAlphaDrag, this.handleTouchMove, i2({\n        backgroundImage: \"linear-gradient(\\n                          to right,\\n                          \".concat(this.getHexString(this.hue, this.saturation, this.brightness, 0), \" 0%\\n                          \").concat(this.getHexString(this.hue, this.saturation, this.brightness, 100), \" 100%\\n                        )\")\n      }), i2({\n        left: \"\".concat(this.alpha, \"%\")\n      }), Math.round(this.alpha), l(this.disabled ? void 0 : \"0\"), this.handleAlphaKeyDown) : \"\", this.localize.term(\"copy\"), i2({\n        \"--preview-color\": this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n      }), this.handleCopy, this.name, this.isEmpty ? \"\" : this.inputValue, this.disabled, this.localize.term(\"currentValue\"), this.handleInputKeyDown, this.handleInputChange, this.handleInputInput, !this.noFormatToggle ? y(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                  <sl-button\\n                    part=\\\"format-button\\\"\\n                    aria-label=\", \"\\n                    exportparts=\\\"\\n                      base:format-button__base,\\n                      prefix:format-button__prefix,\\n                      label:format-button__label,\\n                      suffix:format-button__suffix,\\n                      caret:format-button__caret\\n                    \\\"\\n                    @click=\", \"\\n                  >\\n                    \", \"\\n                  </sl-button>\\n                \"])), this.localize.term(\"toggleColorFormat\"), this.handleFormatToggle, this.setLetterCase(this.format)) : \"\", hasEyeDropper ? y(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n                  <sl-button\\n                    part=\\\"eye-dropper-button\\\"\\n                    exportparts=\\\"\\n                      base:eye-dropper-button__base,\\n                      prefix:eye-dropper-button__prefix,\\n                      label:eye-dropper-button__label,\\n                      suffix:eye-dropper-button__suffix,\\n                      caret:eye-dropper-button__caret\\n                    \\\"\\n                    @click=\", \"\\n                  >\\n                    <sl-icon\\n                      library=\\\"system\\\"\\n                      name=\\\"eyedropper\\\"\\n                      label=\", \"\\n                    ></sl-icon>\\n                  </sl-button>\\n                \"])), this.handleEyeDropper, this.localize.term(\"selectAColorFromTheScreen\")) : \"\", swatches.length > 0 ? y(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n              <div part=\\\"swatches\\\" class=\\\"color-picker__swatches\\\">\\n                \", \"\\n              </div>\\n            \"])), swatches.map(function (swatch) {\n        var parsedColor = _this9.parseColor(swatch);\n        if (!parsedColor) {\n          console.error(\"Unable to parse swatch color: \\\"\".concat(swatch, \"\\\"\"), _this9);\n          return \"\";\n        }\n        return y(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n                    <div\\n                      part=\\\"swatch\\\"\\n                      class=\\\"color-picker__swatch color-picker__transparent-bg\\\"\\n                      tabindex=\", \"\\n                      role=\\\"button\\\"\\n                      aria-label=\", \"\\n                      @click=\", \"\\n                      @keydown=\", \"\\n                    >\\n                      <div\\n                        class=\\\"color-picker__swatch-color\\\"\\n                        style=\", \"\\n                      ></div>\\n                    </div>\\n                  \"])), l(_this9.disabled ? void 0 : \"0\"), swatch, function () {\n          return _this9.selectSwatch(swatch);\n        }, function (event) {\n          return !_this9.disabled && event.key === \"Enter\" && _this9.setColor(parsedColor.hexa);\n        }, i2({\n          backgroundColor: parsedColor.hexa\n        }));\n      })) : \"\");\n      if (this.inline) {\n        return colorPicker;\n      }\n      return y(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n      <sl-dropdown\\n        class=\\\"color-dropdown\\\"\\n        aria-disabled=\", \"\\n        .containing-element=\", \"\\n        ?disabled=\", \"\\n        ?hoist=\", \"\\n        @sl-after-hide=\", \"\\n      >\\n        <button\\n          part=\\\"trigger\\\"\\n          slot=\\\"trigger\\\"\\n          class=\", \"\\n          style=\", \"\\n          type=\\\"button\\\"\\n        >\\n          <sl-visually-hidden>\\n            <slot name=\\\"label\\\">\", \"</slot>\\n          </sl-visually-hidden>\\n        </button>\\n        \", \"\\n      </sl-dropdown>\\n    \"])), this.disabled ? \"true\" : \"false\", this, this.disabled, this.hoist, this.handleAfterHide, o({\n        \"color-dropdown__trigger\": true,\n        \"color-dropdown__trigger--disabled\": this.disabled,\n        \"color-dropdown__trigger--small\": this.size === \"small\",\n        \"color-dropdown__trigger--medium\": this.size === \"medium\",\n        \"color-dropdown__trigger--large\": this.size === \"large\",\n        \"color-dropdown__trigger--empty\": this.isEmpty,\n        \"color-picker__transparent-bg\": true\n      }), i2({\n        color: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n      }), this.label, colorPicker);\n    }\n  }]);\n  return SlColorPicker;\n}(ShoelaceElement);\nSlColorPicker.styles = color_picker_styles_default;\n__decorateClass([i('[part~=\"input\"]')], SlColorPicker.prototype, \"input\", 2);\n__decorateClass([i('[part~=\"preview\"]')], SlColorPicker.prototype, \"previewButton\", 2);\n__decorateClass([i(\".color-dropdown\")], SlColorPicker.prototype, \"dropdown\", 2);\n__decorateClass([t()], SlColorPicker.prototype, \"isDraggingGridHandle\", 2);\n__decorateClass([t()], SlColorPicker.prototype, \"isEmpty\", 2);\n__decorateClass([t()], SlColorPicker.prototype, \"inputValue\", 2);\n__decorateClass([t()], SlColorPicker.prototype, \"hue\", 2);\n__decorateClass([t()], SlColorPicker.prototype, \"saturation\", 2);\n__decorateClass([t()], SlColorPicker.prototype, \"brightness\", 2);\n__decorateClass([t()], SlColorPicker.prototype, \"alpha\", 2);\n__decorateClass([e2()], SlColorPicker.prototype, \"value\", 2);\n__decorateClass([defaultValue()], SlColorPicker.prototype, \"defaultValue\", 2);\n__decorateClass([e2()], SlColorPicker.prototype, \"label\", 2);\n__decorateClass([e2()], SlColorPicker.prototype, \"format\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlColorPicker.prototype, \"inline\", 2);\n__decorateClass([e2()], SlColorPicker.prototype, \"size\", 2);\n__decorateClass([e2({\n  attribute: \"no-format-toggle\",\n  type: Boolean\n})], SlColorPicker.prototype, \"noFormatToggle\", 2);\n__decorateClass([e2()], SlColorPicker.prototype, \"name\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlColorPicker.prototype, \"disabled\", 2);\n__decorateClass([e2({\n  type: Boolean\n})], SlColorPicker.prototype, \"hoist\", 2);\n__decorateClass([e2({\n  type: Boolean\n})], SlColorPicker.prototype, \"opacity\", 2);\n__decorateClass([e2({\n  type: Boolean\n})], SlColorPicker.prototype, \"uppercase\", 2);\n__decorateClass([e2()], SlColorPicker.prototype, \"swatches\", 2);\n__decorateClass([e2({\n  reflect: true\n})], SlColorPicker.prototype, \"form\", 2);\n__decorateClass([watch(\"format\", {\n  waitUntilFirstUpdate: true\n})], SlColorPicker.prototype, \"handleFormatChange\", 1);\n__decorateClass([watch(\"opacity\", {\n  waitUntilFirstUpdate: true\n})], SlColorPicker.prototype, \"handleOpacityChange\", 1);\n__decorateClass([watch(\"value\")], SlColorPicker.prototype, \"handleValueChange\", 1);\nSlColorPicker = __decorateClass([e(\"sl-color-picker\")], SlColorPicker);\nexport { SlColorPicker };","map":null,"metadata":{},"sourceType":"module"}