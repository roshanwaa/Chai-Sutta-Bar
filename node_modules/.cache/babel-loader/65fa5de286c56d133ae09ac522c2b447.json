{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _templateObject;\nimport { mutation_observer_styles_default } from \"./chunk.ONM7523W.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { ShoelaceElement, e, e2 } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/mutation-observer/mutation-observer.ts\nvar SlMutationObserver = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlMutationObserver, _ShoelaceElement);\n  function SlMutationObserver() {\n    var _this;\n    _classCallCheck(this, SlMutationObserver);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlMutationObserver).apply(this, arguments));\n    _this.attrOldValue = false;\n    _this.charData = false;\n    _this.charDataOldValue = false;\n    _this.childList = false;\n    _this.disabled = false;\n    return _this;\n  }\n  _createClass(SlMutationObserver, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(SlMutationObserver.prototype), \"connectedCallback\", this).call(this);\n      this.handleMutation = this.handleMutation.bind(this);\n      this.mutationObserver = new MutationObserver(this.handleMutation);\n      if (!this.disabled) {\n        this.startObserver();\n      }\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.stopObserver();\n    }\n  }, {\n    key: \"handleMutation\",\n    value: function handleMutation(mutationList) {\n      this.emit(\"sl-mutation\", {\n        detail: {\n          mutationList: mutationList\n        }\n      });\n    }\n  }, {\n    key: \"startObserver\",\n    value: function startObserver() {\n      var observeAttributes = typeof this.attr === \"string\" && this.attr.length > 0;\n      var attributeFilter = observeAttributes && this.attr !== \"*\" ? this.attr.split(\" \") : void 0;\n      try {\n        this.mutationObserver.observe(this, {\n          subtree: true,\n          childList: this.childList,\n          attributes: observeAttributes,\n          attributeFilter: attributeFilter,\n          attributeOldValue: this.attrOldValue,\n          characterData: this.charData,\n          characterDataOldValue: this.charDataOldValue\n        });\n      } catch (e3) {}\n    }\n  }, {\n    key: \"stopObserver\",\n    value: function stopObserver() {\n      this.mutationObserver.disconnect();\n    }\n  }, {\n    key: \"handleDisabledChange\",\n    value: function handleDisabledChange() {\n      if (this.disabled) {\n        this.stopObserver();\n      } else {\n        this.startObserver();\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange() {\n      this.stopObserver();\n      this.startObserver();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\" <slot></slot> \"])));\n    }\n  }]);\n  return SlMutationObserver;\n}(ShoelaceElement);\nSlMutationObserver.styles = mutation_observer_styles_default;\n__decorateClass([e2({\n  reflect: true\n})], SlMutationObserver.prototype, \"attr\", 2);\n__decorateClass([e2({\n  attribute: \"attr-old-value\",\n  type: Boolean,\n  reflect: true\n})], SlMutationObserver.prototype, \"attrOldValue\", 2);\n__decorateClass([e2({\n  attribute: \"char-data\",\n  type: Boolean,\n  reflect: true\n})], SlMutationObserver.prototype, \"charData\", 2);\n__decorateClass([e2({\n  attribute: \"char-data-old-value\",\n  type: Boolean,\n  reflect: true\n})], SlMutationObserver.prototype, \"charDataOldValue\", 2);\n__decorateClass([e2({\n  attribute: \"child-list\",\n  type: Boolean,\n  reflect: true\n})], SlMutationObserver.prototype, \"childList\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlMutationObserver.prototype, \"disabled\", 2);\n__decorateClass([watch(\"disabled\")], SlMutationObserver.prototype, \"handleDisabledChange\", 1);\n__decorateClass([watch(\"attr\", {\n  waitUntilFirstUpdate: true\n}), watch(\"attr-old-value\", {\n  waitUntilFirstUpdate: true\n}), watch(\"char-data\", {\n  waitUntilFirstUpdate: true\n}), watch(\"char-data-old-value\", {\n  waitUntilFirstUpdate: true\n}), watch(\"childList\", {\n  waitUntilFirstUpdate: true\n})], SlMutationObserver.prototype, \"handleChange\", 1);\nSlMutationObserver = __decorateClass([e(\"sl-mutation-observer\")], SlMutationObserver);\nexport { SlMutationObserver };","map":null,"metadata":{},"sourceType":"module"}