{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { dropdown_styles_default } from \"./chunk.2EORC5ML.js\";\nimport { getTabbableBoundary } from \"./chunk.G7G6UAKI.js\";\nimport { scrollIntoView } from \"./chunk.5DTVGZG4.js\";\nimport { waitForEvent } from \"./chunk.B4BZKR24.js\";\nimport { animateTo, stopAnimations } from \"./chunk.OD332L4U.js\";\nimport { getAnimation, setDefaultAnimation } from \"./chunk.OAQT3AUQ.js\";\nimport { LocalizeController } from \"./chunk.LLXYF66Q.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { o } from \"./chunk.ORW72H2K.js\";\nimport { ShoelaceElement, e, e2, i } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/dropdown/dropdown.ts\nvar SlDropdown = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlDropdown, _ShoelaceElement);\n  function SlDropdown() {\n    var _this;\n    _classCallCheck(this, SlDropdown);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlDropdown).apply(this, arguments));\n    _this.localize = new LocalizeController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.open = false;\n    _this.placement = \"bottom-start\";\n    _this.disabled = false;\n    _this.stayOpenOnSelect = false;\n    _this.distance = 0;\n    _this.skidding = 0;\n    _this.hoist = false;\n    return _this;\n  }\n  _createClass(SlDropdown, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(SlDropdown.prototype), \"connectedCallback\", this).call(this);\n      this.handleMenuItemActivate = this.handleMenuItemActivate.bind(this);\n      this.handlePanelSelect = this.handlePanelSelect.bind(this);\n      this.handleKeyDown = this.handleKeyDown.bind(this);\n      this.handleDocumentKeyDown = this.handleDocumentKeyDown.bind(this);\n      this.handleDocumentMouseDown = this.handleDocumentMouseDown.bind(this);\n      if (!this.containingElement) {\n        this.containingElement = this;\n      }\n    }\n  }, {\n    key: \"firstUpdated\",\n    value: function firstUpdated() {\n      this.panel.hidden = !this.open;\n      if (this.open) {\n        this.addOpenListeners();\n        this.popup.active = true;\n      }\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      _get(_getPrototypeOf(SlDropdown.prototype), \"disconnectedCallback\", this).call(this);\n      this.removeOpenListeners();\n      this.hide();\n    }\n  }, {\n    key: \"focusOnTrigger\",\n    value: function focusOnTrigger() {\n      var trigger = this.trigger.assignedElements({\n        flatten: true\n      })[0];\n      if (typeof (trigger == null ? void 0 : trigger.focus) === \"function\") {\n        trigger.focus();\n      }\n    }\n  }, {\n    key: \"getMenu\",\n    value: function getMenu() {\n      return this.panel.assignedElements({\n        flatten: true\n      }).find(function (el) {\n        return el.tagName.toLowerCase() === \"sl-menu\";\n      });\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      if (this.open && event.key === \"Escape\") {\n        event.stopPropagation();\n        this.hide();\n        this.focusOnTrigger();\n      }\n    }\n  }, {\n    key: \"handleDocumentKeyDown\",\n    value: function handleDocumentKeyDown(event) {\n      var _this2 = this;\n      var _a;\n      if (event.key === \"Tab\") {\n        if (this.open && ((_a = document.activeElement) == null ? void 0 : _a.tagName.toLowerCase()) === \"sl-menu-item\") {\n          event.preventDefault();\n          this.hide();\n          this.focusOnTrigger();\n          return;\n        }\n        setTimeout(function () {\n          var _a2, _b, _c;\n          var activeElement = ((_a2 = _this2.containingElement) == null ? void 0 : _a2.getRootNode()) instanceof ShadowRoot ? (_c = (_b = document.activeElement) == null ? void 0 : _b.shadowRoot) == null ? void 0 : _c.activeElement : document.activeElement;\n          if (!_this2.containingElement || (activeElement == null ? void 0 : activeElement.closest(_this2.containingElement.tagName.toLowerCase())) !== _this2.containingElement) {\n            _this2.hide();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleDocumentMouseDown\",\n    value: function handleDocumentMouseDown(event) {\n      var path = event.composedPath();\n      if (this.containingElement && !path.includes(this.containingElement)) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"handleMenuItemActivate\",\n    value: function handleMenuItemActivate(event) {\n      var item = event.target;\n      scrollIntoView(item, this.panel);\n    }\n  }, {\n    key: \"handlePanelSelect\",\n    value: function handlePanelSelect(event) {\n      var target = event.target;\n      if (!this.stayOpenOnSelect && target.tagName.toLowerCase() === \"sl-menu\") {\n        this.hide();\n        this.focusOnTrigger();\n      }\n    }\n  }, {\n    key: \"handleTriggerClick\",\n    value: function handleTriggerClick() {\n      if (this.open) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n  }, {\n    key: \"handleTriggerKeyDown\",\n    value: function handleTriggerKeyDown(event) {\n      if (event.key === \"Escape\" && this.open) {\n        event.stopPropagation();\n        this.focusOnTrigger();\n        this.hide();\n        return;\n      }\n      if ([\" \", \"Enter\"].includes(event.key)) {\n        event.preventDefault();\n        this.handleTriggerClick();\n        return;\n      }\n      var menu = this.getMenu();\n      if (menu) {\n        var menuItems = menu.defaultSlot.assignedElements({\n          flatten: true\n        });\n        var firstMenuItem = menuItems[0];\n        var lastMenuItem = menuItems[menuItems.length - 1];\n        if ([\"ArrowDown\", \"ArrowUp\", \"Home\", \"End\"].includes(event.key)) {\n          event.preventDefault();\n          if (!this.open) {\n            this.show();\n          }\n          if (menuItems.length > 0) {\n            requestAnimationFrame(function () {\n              if (event.key === \"ArrowDown\" || event.key === \"Home\") {\n                menu.setCurrentItem(firstMenuItem);\n                firstMenuItem.focus();\n              }\n              if (event.key === \"ArrowUp\" || event.key === \"End\") {\n                menu.setCurrentItem(lastMenuItem);\n                lastMenuItem.focus();\n              }\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleTriggerKeyUp\",\n    value: function handleTriggerKeyUp(event) {\n      if (event.key === \" \") {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"handleTriggerSlotChange\",\n    value: function handleTriggerSlotChange() {\n      this.updateAccessibleTrigger();\n    } //\n    // Slotted triggers can be arbitrary content, but we need to link them to the dropdown panel with `aria-haspopup` and\n    // `aria-expanded`. These must be applied to the \"accessible trigger\" (the tabbable portion of the trigger element\n    // that gets slotted in) so screen readers will understand them. The accessible trigger could be the slotted element,\n    // a child of the slotted element, or an element in the slotted element's shadow root.\n    //\n    // For example, the accessible trigger of an <sl-button> is a <button> located inside its shadow root.\n    //\n    // To determine this, we assume the first tabbable element in the trigger slot is the \"accessible trigger.\"\n    //\n  }, {\n    key: \"updateAccessibleTrigger\",\n    value: function updateAccessibleTrigger() {\n      var assignedElements = this.trigger.assignedElements({\n        flatten: true\n      });\n      var accessibleTrigger = assignedElements.find(function (el) {\n        return getTabbableBoundary(el).start;\n      });\n      var target;\n      if (accessibleTrigger) {\n        switch (accessibleTrigger.tagName.toLowerCase()) {\n          case \"sl-button\":\n          case \"sl-icon-button\":\n            target = accessibleTrigger.button;\n            break;\n          default:\n            target = accessibleTrigger;\n        }\n        target.setAttribute(\"aria-haspopup\", \"true\");\n        target.setAttribute(\"aria-expanded\", this.open ? \"true\" : \"false\");\n      }\n    } /** Shows the dropdown panel. */\n  }, {\n    key: \"show\",\n    value: function () {\n      var _show = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.open) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", void 0);\n            case 2:\n              this.open = true;\n              return _context.abrupt(\"return\", waitForEvent(this, \"sl-after-show\"));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function show() {\n        return _show.apply(this, arguments);\n      }\n      return show;\n    }() /** Hides the dropdown panel */\n  }, {\n    key: \"hide\",\n    value: function () {\n      var _hide = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.open) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", void 0);\n            case 2:\n              this.open = false;\n              return _context2.abrupt(\"return\", waitForEvent(this, \"sl-after-hide\"));\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function hide() {\n        return _hide.apply(this, arguments);\n      }\n      return hide;\n    }()\n    /**\n     * Instructs the dropdown menu to reposition. Useful when the position or size of the trigger changes when the menu\n     * is activated.\n     */\n  }, {\n    key: \"reposition\",\n    value: function reposition() {\n      this.popup.reposition();\n    }\n  }, {\n    key: \"addOpenListeners\",\n    value: function addOpenListeners() {\n      this.panel.addEventListener(\"sl-activate\", this.handleMenuItemActivate);\n      this.panel.addEventListener(\"sl-select\", this.handlePanelSelect);\n      this.panel.addEventListener(\"keydown\", this.handleKeyDown);\n      document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n      document.addEventListener(\"mousedown\", this.handleDocumentMouseDown);\n    }\n  }, {\n    key: \"removeOpenListeners\",\n    value: function removeOpenListeners() {\n      if (this.panel) {\n        this.panel.removeEventListener(\"sl-activate\", this.handleMenuItemActivate);\n        this.panel.removeEventListener(\"sl-select\", this.handlePanelSelect);\n        this.panel.removeEventListener(\"keydown\", this.handleKeyDown);\n      }\n      document.removeEventListener(\"keydown\", this.handleDocumentKeyDown);\n      document.removeEventListener(\"mousedown\", this.handleDocumentMouseDown);\n    }\n  }, {\n    key: \"handleOpenChange\",\n    value: function () {\n      var _handleOpenChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _getAnimation, keyframes, options, _getAnimation2, _keyframes, _options;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!this.disabled) {\n                _context3.next = 3;\n                break;\n              }\n              this.open = false;\n              return _context3.abrupt(\"return\");\n            case 3:\n              this.updateAccessibleTrigger();\n              if (!this.open) {\n                _context3.next = 17;\n                break;\n              }\n              this.emit(\"sl-show\");\n              this.addOpenListeners();\n              _context3.next = 9;\n              return stopAnimations(this);\n            case 9:\n              this.panel.hidden = false;\n              this.popup.active = true;\n              _getAnimation = getAnimation(this, \"dropdown.show\", {\n                dir: this.localize.dir()\n              }), keyframes = _getAnimation.keyframes, options = _getAnimation.options;\n              _context3.next = 14;\n              return animateTo(this.popup.popup, keyframes, options);\n            case 14:\n              this.emit(\"sl-after-show\");\n              _context3.next = 27;\n              break;\n            case 17:\n              this.emit(\"sl-hide\");\n              this.removeOpenListeners();\n              _context3.next = 21;\n              return stopAnimations(this);\n            case 21:\n              _getAnimation2 = getAnimation(this, \"dropdown.hide\", {\n                dir: this.localize.dir()\n              }), _keyframes = _getAnimation2.keyframes, _options = _getAnimation2.options;\n              _context3.next = 24;\n              return animateTo(this.popup.popup, _keyframes, _options);\n            case 24:\n              this.panel.hidden = true;\n              this.popup.active = false;\n              this.emit(\"sl-after-hide\");\n            case 27:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function handleOpenChange() {\n        return _handleOpenChange.apply(this, arguments);\n      }\n      return handleOpenChange;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <sl-popup\\n        part=\\\"base\\\"\\n        id=\\\"dropdown\\\"\\n        placement=\", \"\\n        distance=\", \"\\n        skidding=\", \"\\n        strategy=\", \"\\n        flip\\n        shift\\n        auto-size=\\\"vertical\\\"\\n        auto-size-padding=\\\"10\\\"\\n        class=\", \"\\n      >\\n        <slot\\n          name=\\\"trigger\\\"\\n          slot=\\\"anchor\\\"\\n          part=\\\"trigger\\\"\\n          class=\\\"dropdown__trigger\\\"\\n          @click=\", \"\\n          @keydown=\", \"\\n          @keyup=\", \"\\n          @slotchange=\", \"\\n        ></slot>\\n\\n        <slot\\n          part=\\\"panel\\\"\\n          class=\\\"dropdown__panel\\\"\\n          aria-hidden=\", \"\\n          aria-labelledby=\\\"dropdown\\\"\\n        ></slot>\\n      </sl-popup>\\n    \"])), this.placement, this.distance, this.skidding, this.hoist ? \"fixed\" : \"absolute\", o({\n        dropdown: true,\n        \"dropdown--open\": this.open\n      }), this.handleTriggerClick, this.handleTriggerKeyDown, this.handleTriggerKeyUp, this.handleTriggerSlotChange, this.open ? \"false\" : \"true\");\n    }\n  }]);\n  return SlDropdown;\n}(ShoelaceElement);\nSlDropdown.styles = dropdown_styles_default;\n__decorateClass([i(\".dropdown\")], SlDropdown.prototype, \"popup\", 2);\n__decorateClass([i(\".dropdown__trigger\")], SlDropdown.prototype, \"trigger\", 2);\n__decorateClass([i(\".dropdown__panel\")], SlDropdown.prototype, \"panel\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlDropdown.prototype, \"open\", 2);\n__decorateClass([e2({\n  reflect: true\n})], SlDropdown.prototype, \"placement\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlDropdown.prototype, \"disabled\", 2);\n__decorateClass([e2({\n  attribute: \"stay-open-on-select\",\n  type: Boolean,\n  reflect: true\n})], SlDropdown.prototype, \"stayOpenOnSelect\", 2);\n__decorateClass([e2({\n  attribute: false\n})], SlDropdown.prototype, \"containingElement\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlDropdown.prototype, \"distance\", 2);\n__decorateClass([e2({\n  type: Number\n})], SlDropdown.prototype, \"skidding\", 2);\n__decorateClass([e2({\n  type: Boolean\n})], SlDropdown.prototype, \"hoist\", 2);\n__decorateClass([watch(\"open\", {\n  waitUntilFirstUpdate: true\n})], SlDropdown.prototype, \"handleOpenChange\", 1);\nSlDropdown = __decorateClass([e(\"sl-dropdown\")], SlDropdown);\nsetDefaultAnimation(\"dropdown.show\", {\n  keyframes: [{\n    opacity: 0,\n    scale: 0.9\n  }, {\n    opacity: 1,\n    scale: 1\n  }],\n  options: {\n    duration: 100,\n    easing: \"ease\"\n  }\n});\nsetDefaultAnimation(\"dropdown.hide\", {\n  keyframes: [{\n    opacity: 1,\n    scale: 1\n  }, {\n    opacity: 0,\n    scale: 0.9\n  }],\n  options: {\n    duration: 100,\n    easing: \"ease\"\n  }\n});\nexport { SlDropdown };","map":null,"metadata":{},"sourceType":"module"}