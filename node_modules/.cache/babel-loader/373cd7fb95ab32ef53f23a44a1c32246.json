{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _templateObject;\nimport { menu_styles_default } from \"./chunk.WGZQDQP2.js\";\nimport { ShoelaceElement, e, i } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/menu/menu.ts\nvar SlMenu = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlMenu, _ShoelaceElement);\n  function SlMenu() {\n    _classCallCheck(this, SlMenu);\n    return _possibleConstructorReturn(this, _getPrototypeOf(SlMenu).apply(this, arguments));\n  }\n  _createClass(SlMenu, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(SlMenu.prototype), \"connectedCallback\", this).call(this);\n      this.setAttribute(\"role\", \"menu\");\n    }\n  }, {\n    key: \"getAllItems\",\n    value: function getAllItems() {\n      var _this = this;\n      return _toConsumableArray(this.defaultSlot.assignedElements({\n        flatten: true\n      })).filter(function (el) {\n        if (el.inert || !_this.isMenuItem(el)) {\n          return false;\n        }\n        return true;\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      var target = event.target;\n      var item = target.closest(\"sl-menu-item\");\n      if (!item || item.disabled || item.inert) {\n        return;\n      }\n      if (item.type === \"checkbox\") {\n        item.checked = !item.checked;\n      }\n      this.emit(\"sl-select\", {\n        detail: {\n          item: item\n        }\n      });\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      if (event.key === \"Enter\") {\n        var item = this.getCurrentItem();\n        event.preventDefault();\n        item == null ? void 0 : item.click();\n      }\n      if (event.key === \" \") {\n        event.preventDefault();\n      }\n      if ([\"ArrowDown\", \"ArrowUp\", \"Home\", \"End\"].includes(event.key)) {\n        var items = this.getAllItems();\n        var activeItem = this.getCurrentItem();\n        var index = activeItem ? items.indexOf(activeItem) : 0;\n        if (items.length > 0) {\n          event.preventDefault();\n          if (event.key === \"ArrowDown\") {\n            index++;\n          } else if (event.key === \"ArrowUp\") {\n            index--;\n          } else if (event.key === \"Home\") {\n            index = 0;\n          } else if (event.key === \"End\") {\n            index = items.length - 1;\n          }\n          if (index < 0) {\n            index = items.length - 1;\n          }\n          if (index > items.length - 1) {\n            index = 0;\n          }\n          this.setCurrentItem(items[index]);\n          items[index].focus();\n        }\n      }\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(event) {\n      var target = event.target;\n      if (this.isMenuItem(target)) {\n        this.setCurrentItem(target);\n      }\n    }\n  }, {\n    key: \"handleSlotChange\",\n    value: function handleSlotChange() {\n      var items = this.getAllItems();\n      if (items.length > 0) {\n        this.setCurrentItem(items[0]);\n      }\n    }\n  }, {\n    key: \"isMenuItem\",\n    value: function isMenuItem(item) {\n      var _a;\n      return item.tagName.toLowerCase() === \"sl-menu-item\" || [\"menuitem\", \"menuitemcheckbox\", \"menuitemradio\"].includes((_a = item.getAttribute(\"role\")) != null ? _a : \"\");\n    }\n    /**\n     * @internal Gets the current menu item, which is the menu item that has `tabindex=\"0\"` within the roving tab index.\n     * The menu item may or may not have focus, but for keyboard interaction purposes it's considered the \"active\" item.\n     */\n  }, {\n    key: \"getCurrentItem\",\n    value: function getCurrentItem() {\n      return this.getAllItems().find(function (i2) {\n        return i2.getAttribute(\"tabindex\") === \"0\";\n      });\n    }\n    /**\n     * @internal Sets the current menu item to the specified element. This sets `tabindex=\"0\"` on the target element and\n     * `tabindex=\"-1\"` to all other items. This method must be called prior to setting focus on a menu item.\n     */\n  }, {\n    key: \"setCurrentItem\",\n    value: function setCurrentItem(item) {\n      var items = this.getAllItems();\n      items.forEach(function (i2) {\n        i2.setAttribute(\"tabindex\", i2 === item ? \"0\" : \"-1\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <slot\\n        @slotchange=\", \"\\n        @click=\", \"\\n        @keydown=\", \"\\n        @mousedown=\", \"\\n      ></slot>\\n    \"])), this.handleSlotChange, this.handleClick, this.handleKeyDown, this.handleMouseDown);\n    }\n  }]);\n  return SlMenu;\n}(ShoelaceElement);\nSlMenu.styles = menu_styles_default;\n__decorateClass([i(\"slot\")], SlMenu.prototype, \"defaultSlot\", 2);\nSlMenu = __decorateClass([e(\"sl-menu\")], SlMenu);\nexport { SlMenu };","map":null,"metadata":{},"sourceType":"module"}