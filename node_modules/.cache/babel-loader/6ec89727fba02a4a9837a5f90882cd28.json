{"ast":null,"code":"import _toConsumableArray from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n// src/internal/slot.ts\nvar HasSlotController = /*#__PURE__*/function () {\n  function HasSlotController(host) {\n    _classCallCheck(this, HasSlotController);\n    this.slotNames = [];\n    (this.host = host).addController(this);\n    for (var _len = arguments.length, slotNames = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      slotNames[_key - 1] = arguments[_key];\n    }\n    this.slotNames = slotNames;\n    this.handleSlotChange = this.handleSlotChange.bind(this);\n  }\n  _createClass(HasSlotController, [{\n    key: \"hasDefaultSlot\",\n    value: function hasDefaultSlot() {\n      return _toConsumableArray(this.host.childNodes).some(function (node) {\n        if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== \"\") {\n          return true;\n        }\n        if (node.nodeType === node.ELEMENT_NODE) {\n          var el = node;\n          var tagName = el.tagName.toLowerCase();\n          if (tagName === \"sl-visually-hidden\") {\n            return false;\n          }\n          if (!el.hasAttribute(\"slot\")) {\n            return true;\n          }\n        }\n        return false;\n      });\n    }\n  }, {\n    key: \"hasNamedSlot\",\n    value: function hasNamedSlot(name) {\n      return this.host.querySelector(\":scope > [slot=\\\"\".concat(name, \"\\\"]\")) !== null;\n    }\n  }, {\n    key: \"test\",\n    value: function test(slotName) {\n      return slotName === \"[default]\" ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);\n    }\n  }, {\n    key: \"hostConnected\",\n    value: function hostConnected() {\n      this.host.shadowRoot.addEventListener(\"slotchange\", this.handleSlotChange);\n    }\n  }, {\n    key: \"hostDisconnected\",\n    value: function hostDisconnected() {\n      this.host.shadowRoot.removeEventListener(\"slotchange\", this.handleSlotChange);\n    }\n  }, {\n    key: \"handleSlotChange\",\n    value: function handleSlotChange(event) {\n      var slot = event.target;\n      if (this.slotNames.includes(\"[default]\") && !slot.name || slot.name && this.slotNames.includes(slot.name)) {\n        this.host.requestUpdate();\n      }\n    }\n  }]);\n  return HasSlotController;\n}();\nfunction getTextContent(slot) {\n  if (!slot) {\n    return \"\";\n  }\n  var nodes = slot.assignedNodes({\n    flatten: true\n  });\n  var text = \"\";\n  _toConsumableArray(nodes).forEach(function (node) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n  return text;\n}\nexport { HasSlotController, getTextContent };","map":null,"metadata":{},"sourceType":"module"}