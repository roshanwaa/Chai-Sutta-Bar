{"ast":null,"code":"import { __spreadValues } from \"./chunk.LKA3TPUC.js\";\n\n// src/internal/watch.ts\nfunction watch(propertyName, options) {\n  var resolvedOptions = __spreadValues({\n    waitUntilFirstUpdate: false\n  }, options);\n  return function (proto, decoratedFnName) {\n    var update = proto.update;\n    var watchedProperties = Array.isArray(propertyName) ? propertyName : [propertyName];\n    proto.update = function (changedProps) {\n      var _this = this;\n      watchedProperties.forEach(function (property) {\n        var key = property;\n        if (changedProps.has(key)) {\n          var oldValue = changedProps.get(key);\n          var newValue = _this[key];\n          if (oldValue !== newValue) {\n            if (!resolvedOptions.waitUntilFirstUpdate || _this.hasUpdated) {\n              _this[decoratedFnName](oldValue, newValue);\n            }\n          }\n        }\n      });\n      update.call(this, changedProps);\n    };\n  };\n}\nexport { watch };","map":null,"metadata":{},"sourceType":"module"}