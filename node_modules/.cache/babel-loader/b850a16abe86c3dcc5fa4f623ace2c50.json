{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { select_styles_default } from \"./chunk.WZ54FNSF.js\";\nimport { scrollIntoView } from \"./chunk.5DTVGZG4.js\";\nimport { defaultValue } from \"./chunk.ZNRFAEMI.js\";\nimport { FormControlController } from \"./chunk.DOQUAVYF.js\";\nimport { waitForEvent } from \"./chunk.B4BZKR24.js\";\nimport { animateTo, stopAnimations } from \"./chunk.OD332L4U.js\";\nimport { getAnimation, setDefaultAnimation } from \"./chunk.OAQT3AUQ.js\";\nimport { LocalizeController } from \"./chunk.LLXYF66Q.js\";\nimport { HasSlotController } from \"./chunk.3IYPB6RR.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { o } from \"./chunk.ORW72H2K.js\";\nimport { ShoelaceElement, e, e2, i, t } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/select/select.ts\nvar SlSelect = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlSelect, _ShoelaceElement);\n  function SlSelect() {\n    var _this;\n    _classCallCheck(this, SlSelect);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlSelect).apply(this, arguments));\n    _this.formControlController = new FormControlController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.hasSlotController = new HasSlotController(_assertThisInitialized(_assertThisInitialized(_this)), \"help-text\", \"label\");\n    _this.localize = new LocalizeController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.typeToSelectString = \"\";\n    _this.hasFocus = false;\n    _this.displayLabel = \"\";\n    _this.selectedOptions = [];\n    _this.name = \"\";\n    _this.value = \"\";\n    _this.defaultValue = \"\";\n    _this.size = \"medium\";\n    _this.placeholder = \"\";\n    _this.multiple = false;\n    _this.maxOptionsVisible = 3;\n    _this.disabled = false;\n    _this.clearable = false;\n    _this.open = false;\n    _this.hoist = false;\n    _this.filled = false;\n    _this.pill = false;\n    _this.label = \"\";\n    _this.placement = \"bottom\";\n    _this.helpText = \"\";\n    _this.form = \"\";\n    _this.required = false;\n    return _this;\n  }\n  _createClass(SlSelect, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(SlSelect.prototype), \"connectedCallback\", this).call(this);\n      this.handleDocumentFocusIn = this.handleDocumentFocusIn.bind(this);\n      this.handleDocumentKeyDown = this.handleDocumentKeyDown.bind(this);\n      this.handleDocumentMouseDown = this.handleDocumentMouseDown.bind(this);\n      this.open = false;\n    }\n  }, {\n    key: \"addOpenListeners\",\n    value: function addOpenListeners() {\n      document.addEventListener(\"focusin\", this.handleDocumentFocusIn);\n      document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n      document.addEventListener(\"mousedown\", this.handleDocumentMouseDown);\n    }\n  }, {\n    key: \"removeOpenListeners\",\n    value: function removeOpenListeners() {\n      document.removeEventListener(\"focusin\", this.handleDocumentFocusIn);\n      document.removeEventListener(\"keydown\", this.handleDocumentKeyDown);\n      document.removeEventListener(\"mousedown\", this.handleDocumentMouseDown);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      this.hasFocus = true;\n      this.displayInput.setSelectionRange(0, 0);\n      this.emit(\"sl-focus\");\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.hasFocus = false;\n      this.emit(\"sl-blur\");\n    }\n  }, {\n    key: \"handleDocumentFocusIn\",\n    value: function handleDocumentFocusIn(event) {\n      var path = event.composedPath();\n      if (this && !path.includes(this)) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"handleDocumentKeyDown\",\n    value: function handleDocumentKeyDown(event) {\n      var _this2 = this;\n      var target = event.target;\n      var isClearButton = target.closest(\".select__clear\") !== null;\n      var isIconButton = target.closest(\"sl-icon-button\") !== null;\n      if (isClearButton || isIconButton) {\n        return;\n      }\n      if (event.key === \"Escape\" && this.open) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.hide();\n        this.displayInput.focus({\n          preventScroll: true\n        });\n      }\n      if (event.key === \"Enter\" || event.key === \" \" && this.typeToSelectString === \"\") {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        if (!this.open) {\n          this.show();\n          return;\n        }\n        if (this.currentOption && !this.currentOption.disabled) {\n          if (this.multiple) {\n            this.toggleOptionSelection(this.currentOption);\n          } else {\n            this.setSelectedOptions(this.currentOption);\n          }\n          this.emit(\"sl-input\");\n          this.emit(\"sl-change\");\n          if (!this.multiple) {\n            this.hide();\n            this.displayInput.focus({\n              preventScroll: true\n            });\n          }\n        }\n        return;\n      }\n      if ([\"ArrowUp\", \"ArrowDown\", \"Home\", \"End\"].includes(event.key)) {\n        var allOptions = this.getAllOptions();\n        var currentIndex = allOptions.indexOf(this.currentOption);\n        var newIndex = Math.max(0, currentIndex);\n        event.preventDefault();\n        if (!this.open) {\n          this.show();\n          if (this.currentOption) {\n            return;\n          }\n        }\n        if (event.key === \"ArrowDown\") {\n          newIndex = currentIndex + 1;\n          if (newIndex > allOptions.length - 1) newIndex = 0;\n        } else if (event.key === \"ArrowUp\") {\n          newIndex = currentIndex - 1;\n          if (newIndex < 0) newIndex = allOptions.length - 1;\n        } else if (event.key === \"Home\") {\n          newIndex = 0;\n        } else if (event.key === \"End\") {\n          newIndex = allOptions.length - 1;\n        }\n        this.setCurrentOption(allOptions[newIndex]);\n      }\n      if (event.key.length === 1 || event.key === \"Backspace\") {\n        var _allOptions = this.getAllOptions();\n        if (event.metaKey || event.ctrlKey || event.altKey) {\n          return;\n        }\n        if (!this.open) {\n          if (event.key === \"Backspace\") {\n            return;\n          }\n          this.show();\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        clearTimeout(this.typeToSelectTimeout);\n        this.typeToSelectTimeout = window.setTimeout(function () {\n          return _this2.typeToSelectString = \"\";\n        }, 1e3);\n        if (event.key === \"Backspace\") {\n          this.typeToSelectString = this.typeToSelectString.slice(0, -1);\n        } else {\n          this.typeToSelectString += event.key.toLowerCase();\n        }\n        var _iterator = _createForOfIteratorHelper(_allOptions),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            var label = option.getTextLabel().toLowerCase();\n            if (label.startsWith(this.typeToSelectString)) {\n              this.setCurrentOption(option);\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }, {\n    key: \"handleDocumentMouseDown\",\n    value: function handleDocumentMouseDown(event) {\n      var path = event.composedPath();\n      if (this && !path.includes(this)) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"handleLabelClick\",\n    value: function handleLabelClick() {\n      this.displayInput.focus();\n    }\n  }, {\n    key: \"handleComboboxMouseDown\",\n    value: function handleComboboxMouseDown(event) {\n      var path = event.composedPath();\n      var isIconButton = path.some(function (el) {\n        return el instanceof Element && el.tagName.toLowerCase() === \"sl-icon-button\";\n      });\n      if (this.disabled || isIconButton) {\n        return;\n      }\n      event.preventDefault();\n      this.displayInput.focus({\n        preventScroll: true\n      });\n      this.open = !this.open;\n    }\n  }, {\n    key: \"handleComboboxKeyDown\",\n    value: function handleComboboxKeyDown(event) {\n      event.stopPropagation();\n      this.handleDocumentKeyDown(event);\n    }\n  }, {\n    key: \"handleClearClick\",\n    value: function handleClearClick(event) {\n      event.stopPropagation();\n      if (this.value !== \"\") {\n        this.setSelectedOptions([]);\n        this.displayInput.focus({\n          preventScroll: true\n        });\n        this.emit(\"sl-clear\");\n        this.emit(\"sl-input\");\n        this.emit(\"sl-change\");\n      }\n    }\n  }, {\n    key: \"handleClearMouseDown\",\n    value: function handleClearMouseDown(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleOptionClick\",\n    value: function handleOptionClick(event) {\n      var _this3 = this;\n      var target = event.target;\n      var option = target.closest(\"sl-option\");\n      var oldValue = this.value;\n      if (option && !option.disabled) {\n        if (this.multiple) {\n          this.toggleOptionSelection(option);\n        } else {\n          this.setSelectedOptions(option);\n        }\n        this.updateComplete.then(function () {\n          return _this3.displayInput.focus({\n            preventScroll: true\n          });\n        });\n        if (this.value !== oldValue) {\n          this.emit(\"sl-input\");\n          this.emit(\"sl-change\");\n        }\n        if (!this.multiple) {\n          this.hide();\n          this.displayInput.focus({\n            preventScroll: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleDefaultSlotChange\",\n    value: function handleDefaultSlotChange() {\n      var allOptions = this.getAllOptions();\n      var value = Array.isArray(this.value) ? this.value : [this.value];\n      var values = [];\n      allOptions.forEach(function (option) {\n        if (values.includes(option.value)) {\n          console.error(\"An option with a duplicate value of \\\"\".concat(option.value, \"\\\" has been found in <sl-select>. All options must have unique values.\"), option);\n        }\n        values.push(option.value);\n      });\n      this.setSelectedOptions(allOptions.filter(function (el) {\n        return value.includes(el.value);\n      }));\n    }\n  }, {\n    key: \"handleTagRemove\",\n    value: function handleTagRemove(event, option) {\n      event.stopPropagation();\n      if (!this.disabled) {\n        this.toggleOptionSelection(option, false);\n        this.emit(\"sl-input\");\n        this.emit(\"sl-change\");\n      }\n    } // Gets an array of all <sl-option> elements\n  }, {\n    key: \"getAllOptions\",\n    value: function getAllOptions() {\n      return _toConsumableArray(this.querySelectorAll(\"sl-option\"));\n    } // Gets the first <sl-option> element\n  }, {\n    key: \"getFirstOption\",\n    value: function getFirstOption() {\n      return this.querySelector(\"sl-option\");\n    } // Sets the current option, which is the option the user is currently interacting with (e.g. via keyboard). Only one\n    // option may be \"current\" at a time.\n  }, {\n    key: \"setCurrentOption\",\n    value: function setCurrentOption(option) {\n      var allOptions = this.getAllOptions();\n      allOptions.forEach(function (el) {\n        el.current = false;\n        el.tabIndex = -1;\n      });\n      if (option) {\n        this.currentOption = option;\n        option.current = true;\n        option.tabIndex = 0;\n        option.focus();\n      }\n    } // Sets the selected option(s)\n  }, {\n    key: \"setSelectedOptions\",\n    value: function setSelectedOptions(option) {\n      var allOptions = this.getAllOptions();\n      var newSelectedOptions = Array.isArray(option) ? option : [option];\n      allOptions.forEach(function (el) {\n        return el.selected = false;\n      });\n      if (newSelectedOptions.length) {\n        newSelectedOptions.forEach(function (el) {\n          return el.selected = true;\n        });\n      }\n      this.selectionChanged();\n    } // Toggles an option's selected state\n  }, {\n    key: \"toggleOptionSelection\",\n    value: function toggleOptionSelection(option, force) {\n      if (force === true || force === false) {\n        option.selected = force;\n      } else {\n        option.selected = !option.selected;\n      }\n      this.selectionChanged();\n    } // This method must be called whenever the selection changes. It will update the selected options cache, the current\n    // value, and the display value\n  }, {\n    key: \"selectionChanged\",\n    value: function selectionChanged() {\n      var _this4 = this;\n      var _a, _b, _c, _d;\n      this.selectedOptions = this.getAllOptions().filter(function (el) {\n        return el.selected;\n      });\n      if (this.multiple) {\n        this.value = this.selectedOptions.map(function (el) {\n          return el.value;\n        });\n        if (this.placeholder && this.value.length === 0) {\n          this.displayLabel = \"\";\n        } else {\n          this.displayLabel = this.localize.term(\"numOptionsSelected\", this.selectedOptions.length);\n        }\n      } else {\n        this.value = (_b = (_a = this.selectedOptions[0]) == null ? void 0 : _a.value) != null ? _b : \"\";\n        this.displayLabel = (_d = (_c = this.selectedOptions[0]) == null ? void 0 : _c.getTextLabel()) != null ? _d : \"\";\n      }\n      this.updateComplete.then(function () {\n        _this4.formControlController.updateValidity();\n      });\n    }\n  }, {\n    key: \"handleDisabledChange\",\n    value: function handleDisabledChange() {\n      if (this.disabled) {\n        this.open = false;\n        this.handleOpenChange();\n      }\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange() {\n      var allOptions = this.getAllOptions();\n      var value = Array.isArray(this.value) ? this.value : [this.value];\n      this.setSelectedOptions(allOptions.filter(function (el) {\n        return value.includes(el.value);\n      }));\n    }\n  }, {\n    key: \"handleOpenChange\",\n    value: function () {\n      var _handleOpenChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this5 = this;\n        var _getAnimation, keyframes, options, _getAnimation2, _keyframes, _options;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.open && !this.disabled)) {\n                _context.next = 16;\n                break;\n              }\n              this.setCurrentOption(this.selectedOptions[0] || this.getFirstOption());\n              this.emit(\"sl-show\");\n              this.addOpenListeners();\n              _context.next = 6;\n              return stopAnimations(this);\n            case 6:\n              this.listbox.hidden = false;\n              this.popup.active = true;\n              requestAnimationFrame(function () {\n                _this5.setCurrentOption(_this5.currentOption);\n              });\n              _getAnimation = getAnimation(this, \"select.show\", {\n                dir: this.localize.dir()\n              }), keyframes = _getAnimation.keyframes, options = _getAnimation.options;\n              _context.next = 12;\n              return animateTo(this.popup.popup, keyframes, options);\n            case 12:\n              if (this.currentOption) {\n                scrollIntoView(this.currentOption, this.listbox, \"vertical\", \"auto\");\n              }\n              this.emit(\"sl-after-show\");\n              _context.next = 26;\n              break;\n            case 16:\n              this.emit(\"sl-hide\");\n              this.removeOpenListeners();\n              _context.next = 20;\n              return stopAnimations(this);\n            case 20:\n              _getAnimation2 = getAnimation(this, \"select.hide\", {\n                dir: this.localize.dir()\n              }), _keyframes = _getAnimation2.keyframes, _options = _getAnimation2.options;\n              _context.next = 23;\n              return animateTo(this.popup.popup, _keyframes, _options);\n            case 23:\n              this.listbox.hidden = true;\n              this.popup.active = false;\n              this.emit(\"sl-after-hide\");\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function handleOpenChange() {\n        return _handleOpenChange.apply(this, arguments);\n      }\n      return handleOpenChange;\n    }() /** Shows the listbox. */\n  }, {\n    key: \"show\",\n    value: function () {\n      var _show = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(this.open || this.disabled)) {\n                _context2.next = 3;\n                break;\n              }\n              this.open = false;\n              return _context2.abrupt(\"return\", void 0);\n            case 3:\n              this.open = true;\n              return _context2.abrupt(\"return\", waitForEvent(this, \"sl-after-show\"));\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function show() {\n        return _show.apply(this, arguments);\n      }\n      return show;\n    }() /** Hides the listbox. */\n  }, {\n    key: \"hide\",\n    value: function () {\n      var _hide = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!this.open || this.disabled)) {\n                _context3.next = 3;\n                break;\n              }\n              this.open = false;\n              return _context3.abrupt(\"return\", void 0);\n            case 3:\n              this.open = false;\n              return _context3.abrupt(\"return\", waitForEvent(this, \"sl-after-hide\"));\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function hide() {\n        return _hide.apply(this, arguments);\n      }\n      return hide;\n    }() /** Checks for validity but does not show the browser's validation message. */\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity() {\n      return this.valueInput.checkValidity();\n    } /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  }, {\n    key: \"reportValidity\",\n    value: function reportValidity() {\n      return this.valueInput.reportValidity();\n    } /** Sets a custom validation message. Pass an empty string to restore validity. */\n  }, {\n    key: \"setCustomValidity\",\n    value: function setCustomValidity(message) {\n      this.valueInput.setCustomValidity(message);\n      this.formControlController.updateValidity();\n    } /** Sets focus on the control. */\n  }, {\n    key: \"focus\",\n    value: function focus(options) {\n      this.displayInput.focus(options);\n    } /** Removes focus from the control. */\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.displayInput.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n      var hasLabelSlot = this.hasSlotController.test(\"label\");\n      var hasHelpTextSlot = this.hasSlotController.test(\"help-text\");\n      var hasLabel = this.label ? true : !!hasLabelSlot;\n      var hasHelpText = this.helpText ? true : !!hasHelpTextSlot;\n      var hasClearIcon = this.clearable && !this.disabled && this.value.length > 0;\n      var isPlaceholderVisible = this.placeholder && this.value.length === 0;\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div\\n        part=\\\"form-control\\\"\\n        class=\", \"\\n      >\\n        <label\\n          id=\\\"label\\\"\\n          part=\\\"form-control-label\\\"\\n          class=\\\"form-control__label\\\"\\n          aria-hidden=\", \"\\n          @click=\", \"\\n        >\\n          <slot name=\\\"label\\\">\", \"</slot>\\n        </label>\\n\\n        <div part=\\\"form-control-input\\\" class=\\\"form-control-input\\\">\\n          <sl-popup\\n            class=\", \"\\n            placement=\", \"\\n            strategy=\", \"\\n            flip\\n            shift\\n            sync=\\\"width\\\"\\n            auto-size=\\\"vertical\\\"\\n            auto-size-padding=\\\"10\\\"\\n          >\\n            <div\\n              part=\\\"combobox\\\"\\n              class=\\\"select__combobox\\\"\\n              slot=\\\"anchor\\\"\\n              @keydown=\", \"\\n              @mousedown=\", \"\\n            >\\n              <slot part=\\\"prefix\\\" name=\\\"prefix\\\" class=\\\"select__prefix\\\"></slot>\\n\\n              <input\\n                part=\\\"display-input\\\"\\n                class=\\\"select__display-input\\\"\\n                type=\\\"text\\\"\\n                placeholder=\", \"\\n                .disabled=\", \"\\n                .value=\", \"\\n                autocomplete=\\\"off\\\"\\n                spellcheck=\\\"false\\\"\\n                autocapitalize=\\\"off\\\"\\n                readonly\\n                aria-controls=\\\"listbox\\\"\\n                aria-expanded=\", \"\\n                aria-haspopup=\\\"listbox\\\"\\n                aria-labelledby=\\\"label\\\"\\n                aria-disabled=\", \"\\n                aria-describedby=\\\"help-text\\\"\\n                role=\\\"combobox\\\"\\n                tabindex=\\\"0\\\"\\n                @focus=\", \"\\n                @blur=\", \"\\n              />\\n\\n              \", \"\\n\\n              <input\\n                class=\\\"select__value-input\\\"\\n                type=\\\"text\\\"\\n                ?disabled=\", \"\\n                ?required=\", \"\\n                .value=\", \"\\n                tabindex=\\\"-1\\\"\\n                aria-hidden=\\\"true\\\"\\n                @focus=\", \"\\n              />\\n\\n              \", \"\\n\\n              <slot name=\\\"expand-icon\\\" part=\\\"expand-icon\\\" class=\\\"select__expand-icon\\\">\\n                <sl-icon library=\\\"system\\\" name=\\\"chevron-down\\\"></sl-icon>\\n              </slot>\\n            </div>\\n\\n            <slot\\n              id=\\\"listbox\\\"\\n              role=\\\"listbox\\\"\\n              aria-expanded=\", \"\\n              aria-multiselectable=\", \"\\n              aria-labelledby=\\\"label\\\"\\n              part=\\\"listbox\\\"\\n              class=\\\"select__listbox\\\"\\n              tabindex=\\\"-1\\\"\\n              @mouseup=\", \"\\n              @slotchange=\", \"\\n            ></slot>\\n          </sl-popup>\\n\\n          <slot\\n            name=\\\"help-text\\\"\\n            part=\\\"form-control-help-text\\\"\\n            id=\\\"help-text\\\"\\n            class=\\\"form-control__help-text\\\"\\n            aria-hidden=\", \"\\n          >\\n            \", \"\\n          </slot>\\n        </div>\\n      </div>\\n    \"])), o({\n        \"form-control\": true,\n        \"form-control--small\": this.size === \"small\",\n        \"form-control--medium\": this.size === \"medium\",\n        \"form-control--large\": this.size === \"large\",\n        \"form-control--has-label\": hasLabel,\n        \"form-control--has-help-text\": hasHelpText\n      }), hasLabel ? \"false\" : \"true\", this.handleLabelClick, this.label, o({\n        select: true,\n        \"select--standard\": true,\n        \"select--filled\": this.filled,\n        \"select--pill\": this.pill,\n        \"select--open\": this.open,\n        \"select--disabled\": this.disabled,\n        \"select--multiple\": this.multiple,\n        \"select--focused\": this.hasFocus,\n        \"select--placeholder-visible\": isPlaceholderVisible,\n        \"select--top\": this.placement === \"top\",\n        \"select--bottom\": this.placement === \"bottom\",\n        \"select--small\": this.size === \"small\",\n        \"select--medium\": this.size === \"medium\",\n        \"select--large\": this.size === \"large\"\n      }), this.placement, this.hoist ? \"fixed\" : \"absolute\", this.handleComboboxKeyDown, this.handleComboboxMouseDown, this.placeholder, this.disabled, this.displayLabel, this.open ? \"true\" : \"false\", this.disabled ? \"true\" : \"false\", this.handleFocus, this.handleBlur, this.multiple ? y(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n                    <div part=\\\"tags\\\" class=\\\"select__tags\\\">\\n                      \", \"\\n                    </div>\\n                  \"])), this.selectedOptions.map(function (option, index) {\n        if (index < _this6.maxOptionsVisible || _this6.maxOptionsVisible <= 0) {\n          return y(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                            <sl-tag\\n                              part=\\\"tag\\\"\\n                              ?pill=\", \"\\n                              size=\", \"\\n                              removable\\n                              @sl-remove=\", \"\\n                            >\\n                              \", \"\\n                            </sl-tag>\\n                          \"])), _this6.pill, _this6.size, function (event) {\n            return _this6.handleTagRemove(event, option);\n          }, option.getTextLabel());\n        } else if (index === _this6.maxOptionsVisible) {\n          return y(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\" <sl-tag size=\", \"> +\", \" </sl-tag> \"])), _this6.size, _this6.selectedOptions.length - index);\n        } else {\n          return null;\n        }\n      })) : \"\", this.disabled, this.required, Array.isArray(this.value) ? this.value.join(\", \") : this.value, function () {\n        return _this6.focus();\n      }, hasClearIcon ? y(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n                    <button\\n                      part=\\\"clear-button\\\"\\n                      class=\\\"select__clear\\\"\\n                      type=\\\"button\\\"\\n                      aria-label=\", \"\\n                      @mousedown=\", \"\\n                      @click=\", \"\\n                      tabindex=\\\"-1\\\"\\n                    >\\n                      <slot name=\\\"clear-icon\\\">\\n                        <sl-icon name=\\\"x-circle-fill\\\" library=\\\"system\\\"></sl-icon>\\n                      </slot>\\n                    </button>\\n                  \"])), this.localize.term(\"clearEntry\"), this.handleClearMouseDown, this.handleClearClick) : \"\", this.open ? \"true\" : \"false\", this.multiple ? \"true\" : \"false\", this.handleOptionClick, this.handleDefaultSlotChange, hasHelpText ? \"false\" : \"true\", this.helpText);\n    }\n  }]);\n  return SlSelect;\n}(ShoelaceElement);\nSlSelect.styles = select_styles_default;\n__decorateClass([i(\".select\")], SlSelect.prototype, \"popup\", 2);\n__decorateClass([i(\".select__combobox\")], SlSelect.prototype, \"combobox\", 2);\n__decorateClass([i(\".select__display-input\")], SlSelect.prototype, \"displayInput\", 2);\n__decorateClass([i(\".select__value-input\")], SlSelect.prototype, \"valueInput\", 2);\n__decorateClass([i(\".select__listbox\")], SlSelect.prototype, \"listbox\", 2);\n__decorateClass([t()], SlSelect.prototype, \"hasFocus\", 2);\n__decorateClass([t()], SlSelect.prototype, \"displayLabel\", 2);\n__decorateClass([t()], SlSelect.prototype, \"currentOption\", 2);\n__decorateClass([t()], SlSelect.prototype, \"selectedOptions\", 2);\n__decorateClass([e2()], SlSelect.prototype, \"name\", 2);\n__decorateClass([e2({\n  converter: {\n    fromAttribute: function fromAttribute(value) {\n      return value.split(\" \");\n    },\n    toAttribute: function toAttribute(value) {\n      return value.join(\" \");\n    }\n  }\n})], SlSelect.prototype, \"value\", 2);\n__decorateClass([defaultValue()], SlSelect.prototype, \"defaultValue\", 2);\n__decorateClass([e2()], SlSelect.prototype, \"size\", 2);\n__decorateClass([e2()], SlSelect.prototype, \"placeholder\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlSelect.prototype, \"multiple\", 2);\n__decorateClass([e2({\n  attribute: \"max-options-visible\",\n  type: Number\n})], SlSelect.prototype, \"maxOptionsVisible\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlSelect.prototype, \"disabled\", 2);\n__decorateClass([e2({\n  type: Boolean\n})], SlSelect.prototype, \"clearable\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlSelect.prototype, \"open\", 2);\n__decorateClass([e2({\n  type: Boolean\n})], SlSelect.prototype, \"hoist\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlSelect.prototype, \"filled\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlSelect.prototype, \"pill\", 2);\n__decorateClass([e2()], SlSelect.prototype, \"label\", 2);\n__decorateClass([e2({\n  reflect: true\n})], SlSelect.prototype, \"placement\", 2);\n__decorateClass([e2({\n  attribute: \"help-text\"\n})], SlSelect.prototype, \"helpText\", 2);\n__decorateClass([e2({\n  reflect: true\n})], SlSelect.prototype, \"form\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], SlSelect.prototype, \"required\", 2);\n__decorateClass([watch(\"disabled\", {\n  waitUntilFirstUpdate: true\n})], SlSelect.prototype, \"handleDisabledChange\", 1);\n__decorateClass([watch(\"value\", {\n  waitUntilFirstUpdate: true\n})], SlSelect.prototype, \"handleValueChange\", 1);\n__decorateClass([watch(\"open\", {\n  waitUntilFirstUpdate: true\n})], SlSelect.prototype, \"handleOpenChange\", 1);\nSlSelect = __decorateClass([e(\"sl-select\")], SlSelect);\nsetDefaultAnimation(\"select.show\", {\n  keyframes: [{\n    opacity: 0,\n    scale: 0.9\n  }, {\n    opacity: 1,\n    scale: 1\n  }],\n  options: {\n    duration: 100,\n    easing: \"ease\"\n  }\n});\nsetDefaultAnimation(\"select.hide\", {\n  keyframes: [{\n    opacity: 1,\n    scale: 1\n  }, {\n    opacity: 0,\n    scale: 0.9\n  }],\n  options: {\n    duration: 100,\n    easing: \"ease\"\n  }\n});\nexport { SlSelect };","map":null,"metadata":{},"sourceType":"module"}