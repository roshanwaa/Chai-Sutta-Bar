{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { tree_item_styles_default } from \"./chunk.VC7ZCRCD.js\";\nimport { l } from \"./chunk.OXFFPZHD.js\";\nimport { animateTo, shimKeyframesHeightAuto, stopAnimations } from \"./chunk.OD332L4U.js\";\nimport { getAnimation, setDefaultAnimation } from \"./chunk.OAQT3AUQ.js\";\nimport { LocalizeController } from \"./chunk.LLXYF66Q.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { o } from \"./chunk.ORW72H2K.js\";\nimport { ShoelaceElement, e, e2, i, t } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// node_modules/lit-html/directives/when.js\nfunction n(n2, o2, r) {\n  return n2 ? o2() : null == r ? void 0 : r();\n}\n\n// src/components/tree-item/tree-item.ts\nvar _SlTreeItem = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlTreeItem, _ShoelaceElement);\n  function SlTreeItem() {\n    var _this;\n    _classCallCheck(this, SlTreeItem);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlTreeItem).apply(this, arguments));\n    _this.localize = new LocalizeController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.indeterminate = false;\n    _this.isLeaf = false;\n    _this.loading = false;\n    _this.selectable = false;\n    _this.expanded = false;\n    _this.selected = false;\n    _this.disabled = false;\n    _this.lazy = false;\n    return _this;\n  }\n  _createClass(SlTreeItem, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(SlTreeItem.prototype), \"connectedCallback\", this).call(this);\n      this.setAttribute(\"role\", \"treeitem\");\n      this.setAttribute(\"tabindex\", \"-1\");\n      if (this.isNestedItem()) {\n        this.slot = \"children\";\n      }\n    }\n  }, {\n    key: \"firstUpdated\",\n    value: function firstUpdated() {\n      this.childrenContainer.hidden = !this.expanded;\n      this.childrenContainer.style.height = this.expanded ? \"auto\" : \"0\";\n      this.isLeaf = !this.lazy && this.getChildrenItems().length === 0;\n      this.handleExpandedChange();\n    }\n  }, {\n    key: \"animateCollapse\",\n    value: function () {\n      var _animateCollapse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _getAnimation, keyframes, options;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.emit(\"sl-collapse\");\n              _context.next = 3;\n              return stopAnimations(this.childrenContainer);\n            case 3:\n              _getAnimation = getAnimation(this, \"tree-item.collapse\", {\n                dir: this.localize.dir()\n              }), keyframes = _getAnimation.keyframes, options = _getAnimation.options;\n              _context.next = 6;\n              return animateTo(this.childrenContainer, shimKeyframesHeightAuto(keyframes, this.childrenContainer.scrollHeight), options);\n            case 6:\n              this.childrenContainer.hidden = true;\n              this.emit(\"sl-after-collapse\");\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function animateCollapse() {\n        return _animateCollapse.apply(this, arguments);\n      }\n      return animateCollapse;\n    }() // Checks whether the item is nested into an item\n  }, {\n    key: \"isNestedItem\",\n    value: function isNestedItem() {\n      var parent = this.parentElement;\n      return !!parent && _SlTreeItem.isTreeItem(parent);\n    }\n  }, {\n    key: \"handleChildrenSlotChange\",\n    value: function handleChildrenSlotChange() {\n      this.loading = false;\n      this.isLeaf = !this.lazy && this.getChildrenItems().length === 0;\n    }\n  }, {\n    key: \"willUpdate\",\n    value: function willUpdate(changedProperties) {\n      if (changedProperties.has(\"selected\") && !changedProperties.has(\"indeterminate\")) {\n        this.indeterminate = false;\n      }\n    }\n  }, {\n    key: \"animateExpand\",\n    value: function () {\n      var _animateExpand = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _getAnimation2, keyframes, options;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.emit(\"sl-expand\");\n              _context2.next = 3;\n              return stopAnimations(this.childrenContainer);\n            case 3:\n              this.childrenContainer.hidden = false;\n              _getAnimation2 = getAnimation(this, \"tree-item.expand\", {\n                dir: this.localize.dir()\n              }), keyframes = _getAnimation2.keyframes, options = _getAnimation2.options;\n              _context2.next = 7;\n              return animateTo(this.childrenContainer, shimKeyframesHeightAuto(keyframes, this.childrenContainer.scrollHeight), options);\n            case 7:\n              this.childrenContainer.style.height = \"auto\";\n              this.emit(\"sl-after-expand\");\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function animateExpand() {\n        return _animateExpand.apply(this, arguments);\n      }\n      return animateExpand;\n    }()\n  }, {\n    key: \"handleLoadingChange\",\n    value: function handleLoadingChange() {\n      this.setAttribute(\"aria-busy\", this.loading ? \"true\" : \"false\");\n      if (!this.loading) {\n        this.animateExpand();\n      }\n    }\n  }, {\n    key: \"handleDisabledChange\",\n    value: function handleDisabledChange() {\n      this.setAttribute(\"aria-disabled\", this.disabled ? \"true\" : \"false\");\n    }\n  }, {\n    key: \"handleSelectedChange\",\n    value: function handleSelectedChange() {\n      this.setAttribute(\"aria-selected\", this.selected ? \"true\" : \"false\");\n    }\n  }, {\n    key: \"handleExpandedChange\",\n    value: function handleExpandedChange() {\n      if (!this.isLeaf) {\n        this.setAttribute(\"aria-expanded\", this.expanded ? \"true\" : \"false\");\n      } else {\n        this.removeAttribute(\"aria-expanded\");\n      }\n    }\n  }, {\n    key: \"handleExpandAnimation\",\n    value: function handleExpandAnimation() {\n      if (this.expanded) {\n        if (this.lazy) {\n          this.loading = true;\n          this.emit(\"sl-lazy-load\");\n        } else {\n          this.animateExpand();\n        }\n      } else {\n        this.animateCollapse();\n      }\n    }\n  }, {\n    key: \"handleLazyChange\",\n    value: function handleLazyChange() {\n      this.emit(\"sl-lazy-change\");\n    } /** Gets all the nested tree items in this node. */\n  }, {\n    key: \"getChildrenItems\",\n    value: function getChildrenItems() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$includeDisabled = _ref.includeDisabled,\n        includeDisabled = _ref$includeDisabled === void 0 ? true : _ref$includeDisabled;\n      return this.childrenSlot ? _toConsumableArray(this.childrenSlot.assignedElements({\n        flatten: true\n      })).filter(function (item) {\n        return _SlTreeItem.isTreeItem(item) && (includeDisabled || !item.disabled);\n      }) : [];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isRtl = this.localize.dir() === \"rtl\";\n      var showExpandButton = !this.loading && (!this.isLeaf || this.lazy);\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div\\n        part=\\\"base\\\"\\n        class=\\\"\", \"\\\"\\n      >\\n        <div\\n          class=\\\"tree-item__item\\\"\\n          part=\\\"\\n            item\\n            \", \"\\n            \", \"\\n            \", \"\\n            \", \"\\n          \\\"\\n        >\\n          <div class=\\\"tree-item__indentation\\\" part=\\\"indentation\\\"></div>\\n\\n          <div\\n            part=\\\"expand-button\\\"\\n            class=\", \"\\n            aria-hidden=\\\"true\\\"\\n          >\\n            \", \"\\n            <slot class=\\\"tree-item__expand-icon-slot\\\" name=\\\"expand-icon\\\">\\n              <sl-icon library=\\\"system\\\" name=\", \"></sl-icon>\\n            </slot>\\n            <slot class=\\\"tree-item__expand-icon-slot\\\" name=\\\"collapse-icon\\\">\\n              <sl-icon library=\\\"system\\\" name=\", \"></sl-icon>\\n            </slot>\\n          </div>\\n\\n          \", \"\\n        </div>\\n\\n        <slot\\n          name=\\\"children\\\"\\n          class=\\\"tree-item__children\\\"\\n          part=\\\"children\\\"\\n          role=\\\"group\\\"\\n          @slotchange=\\\"\", \"\\\"\\n        ></slot>\\n      </div>\\n    \"])), o({\n        \"tree-item\": true,\n        \"tree-item--expanded\": this.expanded,\n        \"tree-item--selected\": this.selected,\n        \"tree-item--disabled\": this.disabled,\n        \"tree-item--leaf\": this.isLeaf,\n        \"tree-item--has-expand-button\": showExpandButton,\n        \"tree-item--rtl\": this.localize.dir() === \"rtl\"\n      }), this.disabled ? \"item--disabled\" : \"\", this.expanded ? \"item--expanded\" : \"\", this.indeterminate ? \"item--indeterminate\" : \"\", this.selected ? \"item--selected\" : \"\", o({\n        \"tree-item__expand-button\": true,\n        \"tree-item__expand-button--visible\": showExpandButton\n      }), n(this.loading, function () {\n        return y(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\" <sl-spinner></sl-spinner> \"])));\n      }), isRtl ? \"chevron-left\" : \"chevron-right\", isRtl ? \"chevron-left\" : \"chevron-right\", n(this.selectable, function () {\n        return y(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                <sl-checkbox\\n                  tabindex=\\\"-1\\\"\\n                  class=\\\"tree-item__checkbox\\\"\\n                  ?disabled=\\\"\", \"\\\"\\n                  ?checked=\\\"\", \"\\\"\\n                  ?indeterminate=\\\"\", \"\\\"\\n                >\\n                  <slot class=\\\"tree-item__label\\\" part=\\\"label\\\"></slot>\\n                </sl-checkbox>\\n              \"])), _this2.disabled, l(_this2.selected), _this2.indeterminate);\n      }, function () {\n        return y(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\" <slot class=\\\"tree-item__label\\\" part=\\\"label\\\"></slot> \"])));\n      }), this.handleChildrenSlotChange);\n    }\n  }], [{\n    key: \"isTreeItem\",\n    value: function isTreeItem(node) {\n      return node instanceof Element && node.getAttribute(\"role\") === \"treeitem\";\n    }\n  }]);\n  return SlTreeItem;\n}(ShoelaceElement);\n_SlTreeItem.styles = tree_item_styles_default;\n__decorateClass([t()], _SlTreeItem.prototype, \"indeterminate\", 2);\n__decorateClass([t()], _SlTreeItem.prototype, \"isLeaf\", 2);\n__decorateClass([t()], _SlTreeItem.prototype, \"loading\", 2);\n__decorateClass([t()], _SlTreeItem.prototype, \"selectable\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], _SlTreeItem.prototype, \"expanded\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], _SlTreeItem.prototype, \"selected\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], _SlTreeItem.prototype, \"disabled\", 2);\n__decorateClass([e2({\n  type: Boolean,\n  reflect: true\n})], _SlTreeItem.prototype, \"lazy\", 2);\n__decorateClass([i(\"slot:not([name])\")], _SlTreeItem.prototype, \"defaultSlot\", 2);\n__decorateClass([i(\"slot[name=children]\")], _SlTreeItem.prototype, \"childrenSlot\", 2);\n__decorateClass([i(\".tree-item__item\")], _SlTreeItem.prototype, \"itemElement\", 2);\n__decorateClass([i(\".tree-item__children\")], _SlTreeItem.prototype, \"childrenContainer\", 2);\n__decorateClass([i(\".tree-item__expand-button slot\")], _SlTreeItem.prototype, \"expandButtonSlot\", 2);\n__decorateClass([watch(\"loading\", {\n  waitUntilFirstUpdate: true\n})], _SlTreeItem.prototype, \"handleLoadingChange\", 1);\n__decorateClass([watch(\"disabled\")], _SlTreeItem.prototype, \"handleDisabledChange\", 1);\n__decorateClass([watch(\"selected\")], _SlTreeItem.prototype, \"handleSelectedChange\", 1);\n__decorateClass([watch(\"expanded\", {\n  waitUntilFirstUpdate: true\n})], _SlTreeItem.prototype, \"handleExpandedChange\", 1);\n__decorateClass([watch(\"expanded\", {\n  waitUntilFirstUpdate: true\n})], _SlTreeItem.prototype, \"handleExpandAnimation\", 1);\n__decorateClass([watch(\"lazy\", {\n  waitUntilFirstUpdate: true\n})], _SlTreeItem.prototype, \"handleLazyChange\", 1);\n_SlTreeItem = __decorateClass([e(\"sl-tree-item\")], _SlTreeItem);\nsetDefaultAnimation(\"tree-item.expand\", {\n  keyframes: [{\n    height: \"0\",\n    opacity: \"0\",\n    overflow: \"hidden\"\n  }, {\n    height: \"auto\",\n    opacity: \"1\",\n    overflow: \"hidden\"\n  }],\n  options: {\n    duration: 250,\n    easing: \"cubic-bezier(0.4, 0.0, 0.2, 1)\"\n  }\n});\nsetDefaultAnimation(\"tree-item.collapse\", {\n  keyframes: [{\n    height: \"auto\",\n    opacity: \"1\",\n    overflow: \"hidden\"\n  }, {\n    height: \"0\",\n    opacity: \"0\",\n    overflow: \"hidden\"\n  }],\n  options: {\n    duration: 200,\n    easing: \"cubic-bezier(0.4, 0.0, 0.2, 1)\"\n  }\n});\nexport { _SlTreeItem as SlTreeItem };\n/*! Bundled license information:\n\nlit-html/directives/when.js:\n  (**\n   * @license\n   * Copyright 2021 Google LLC\n   * SPDX-License-Identifier: BSD-3-Clause\n   *)\n*/","map":null,"metadata":{},"sourceType":"module"}