{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject;\nimport { image_comparer_styles_default } from \"./chunk.NQHM4ASC.js\";\nimport { drag } from \"./chunk.A4SOQOK5.js\";\nimport { clamp } from \"./chunk.HF7GESMZ.js\";\nimport { i as i2 } from \"./chunk.B6IYY6FB.js\";\nimport { LocalizeController } from \"./chunk.LLXYF66Q.js\";\nimport { watch } from \"./chunk.VQ3XOPCT.js\";\nimport { o } from \"./chunk.ORW72H2K.js\";\nimport { ShoelaceElement, e, e2, i } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/image-comparer/image-comparer.ts\nvar SlImageComparer = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlImageComparer, _ShoelaceElement);\n  function SlImageComparer() {\n    var _this;\n    _classCallCheck(this, SlImageComparer);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlImageComparer).apply(this, arguments));\n    _this.localize = new LocalizeController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.position = 50;\n    return _this;\n  }\n  _createClass(SlImageComparer, [{\n    key: \"handleDrag\",\n    value: function handleDrag(event) {\n      var _this2 = this;\n      var _this$base$getBoundin = this.base.getBoundingClientRect(),\n        width = _this$base$getBoundin.width;\n      var isRtl = this.localize.dir() === \"rtl\";\n      event.preventDefault();\n      drag(this.base, {\n        onMove: function onMove(x) {\n          _this2.position = parseFloat(clamp(x / width * 100, 0, 100).toFixed(2));\n          if (isRtl) _this2.position = 100 - _this2.position;\n        },\n        initialEvent: event\n      });\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      var isLtr = this.localize.dir() === \"ltr\";\n      var isRtl = this.localize.dir() === \"rtl\";\n      if ([\"ArrowLeft\", \"ArrowRight\", \"Home\", \"End\"].includes(event.key)) {\n        var incr = event.shiftKey ? 10 : 1;\n        var newPosition = this.position;\n        event.preventDefault();\n        if (isLtr && event.key === \"ArrowLeft\" || isRtl && event.key === \"ArrowRight\") {\n          newPosition -= incr;\n        }\n        if (isLtr && event.key === \"ArrowRight\" || isRtl && event.key === \"ArrowLeft\") {\n          newPosition += incr;\n        }\n        if (event.key === \"Home\") {\n          newPosition = 0;\n        }\n        if (event.key === \"End\") {\n          newPosition = 100;\n        }\n        newPosition = clamp(newPosition, 0, 100);\n        this.position = newPosition;\n      }\n    }\n  }, {\n    key: \"handlePositionChange\",\n    value: function handlePositionChange() {\n      this.emit(\"sl-change\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isRtl = this.localize.dir() === \"rtl\";\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div\\n        part=\\\"base\\\"\\n        id=\\\"image-comparer\\\"\\n        class=\", \"\\n        @keydown=\", \"\\n      >\\n        <div class=\\\"image-comparer__image\\\">\\n          <slot name=\\\"before\\\" part=\\\"before\\\" class=\\\"image-comparer__before\\\"></slot>\\n\\n          <slot\\n            name=\\\"after\\\"\\n            part=\\\"after\\\"\\n            class=\\\"image-comparer__after\\\"\\n            style=\", \"\\n          ></slot>\\n        </div>\\n\\n        <div\\n          part=\\\"divider\\\"\\n          class=\\\"image-comparer__divider\\\"\\n          style=\", \"\\n          @mousedown=\", \"\\n          @touchstart=\", \"\\n        >\\n          <slot\\n            name=\\\"handle\\\"\\n            part=\\\"handle\\\"\\n            class=\\\"image-comparer__handle\\\"\\n            role=\\\"scrollbar\\\"\\n            aria-valuenow=\", \"\\n            aria-valuemin=\\\"0\\\"\\n            aria-valuemax=\\\"100\\\"\\n            aria-controls=\\\"image-comparer\\\"\\n            tabindex=\\\"0\\\"\\n          >\\n            <sl-icon library=\\\"system\\\" name=\\\"grip-vertical\\\"></sl-icon>\\n          </slot>\\n        </div>\\n      </div>\\n    \"])), o({\n        \"image-comparer\": true,\n        \"image-comparer--rtl\": isRtl\n      }), this.handleKeyDown, i2({\n        clipPath: isRtl ? \"inset(0 0 0 \".concat(100 - this.position, \"%)\") : \"inset(0 \".concat(100 - this.position, \"% 0 0)\")\n      }), i2({\n        left: isRtl ? \"\".concat(100 - this.position, \"%\") : \"\".concat(this.position, \"%\")\n      }), this.handleDrag, this.handleDrag, this.position);\n    }\n  }]);\n  return SlImageComparer;\n}(ShoelaceElement);\nSlImageComparer.styles = image_comparer_styles_default;\n__decorateClass([i(\".image-comparer\")], SlImageComparer.prototype, \"base\", 2);\n__decorateClass([i(\".image-comparer__handle\")], SlImageComparer.prototype, \"handle\", 2);\n__decorateClass([e2({\n  type: Number,\n  reflect: true\n})], SlImageComparer.prototype, \"position\", 2);\n__decorateClass([watch(\"position\", {\n  waitUntilFirstUpdate: true\n})], SlImageComparer.prototype, \"handlePositionChange\", 1);\nSlImageComparer = __decorateClass([e(\"sl-image-comparer\")], SlImageComparer);\nexport { SlImageComparer };","map":null,"metadata":{},"sourceType":"module"}