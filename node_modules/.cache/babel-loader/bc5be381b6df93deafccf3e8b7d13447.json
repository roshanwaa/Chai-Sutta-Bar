{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\New folder\\\\Prj\\\\csb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _templateObject;\nimport { breadcrumb_styles_default } from \"./chunk.6HVAZWJZ.js\";\nimport { LocalizeController } from \"./chunk.LLXYF66Q.js\";\nimport { ShoelaceElement, e, e2, i } from \"./chunk.Z5VD5WTS.js\";\nimport { y } from \"./chunk.DUT32TWM.js\";\nimport { __decorateClass } from \"./chunk.LKA3TPUC.js\";\n\n// src/components/breadcrumb/breadcrumb.ts\nvar SlBreadcrumb = /*#__PURE__*/function (_ShoelaceElement) {\n  _inherits(SlBreadcrumb, _ShoelaceElement);\n  function SlBreadcrumb() {\n    var _this;\n    _classCallCheck(this, SlBreadcrumb);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SlBreadcrumb).apply(this, arguments));\n    _this.localize = new LocalizeController(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.separatorDir = _this.localize.dir();\n    _this.label = \"\";\n    return _this;\n  }\n  // Generates a clone of the separator element to use for each breadcrumb item\n  _createClass(SlBreadcrumb, [{\n    key: \"getSeparator\",\n    value: function getSeparator() {\n      var separator = this.separatorSlot.assignedElements({\n        flatten: true\n      })[0];\n      var clone = separator.cloneNode(true);\n      [clone].concat(_toConsumableArray(clone.querySelectorAll(\"[id]\"))).forEach(function (el) {\n        return el.removeAttribute(\"id\");\n      });\n      clone.setAttribute(\"data-default\", \"\");\n      clone.slot = \"separator\";\n      return clone;\n    }\n  }, {\n    key: \"handleSlotChange\",\n    value: function handleSlotChange() {\n      var _this2 = this;\n      var items = _toConsumableArray(this.defaultSlot.assignedElements({\n        flatten: true\n      })).filter(function (item) {\n        return item.tagName.toLowerCase() === \"sl-breadcrumb-item\";\n      });\n      items.forEach(function (item, index) {\n        var separator = item.querySelector('[slot=\"separator\"]');\n        if (separator === null) {\n          item.append(_this2.getSeparator());\n        } else if (separator.hasAttribute(\"data-default\")) {\n          separator.replaceWith(_this2.getSeparator());\n        } else {}\n        if (index === items.length - 1) {\n          item.setAttribute(\"aria-current\", \"page\");\n        } else {\n          item.removeAttribute(\"aria-current\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      if (this.separatorDir !== this.localize.dir()) {\n        this.separatorDir = this.localize.dir();\n        this.updateComplete.then(function () {\n          return _this3.handleSlotChange();\n        });\n      }\n      return y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <nav part=\\\"base\\\" class=\\\"breadcrumb\\\" aria-label=\", \">\\n        <slot @slotchange=\", \"></slot>\\n      </nav>\\n\\n      <slot name=\\\"separator\\\" hidden aria-hidden=\\\"true\\\">\\n        <sl-icon name=\", \" library=\\\"system\\\"></sl-icon>\\n      </slot>\\n    \"])), this.label, this.handleSlotChange, this.localize.dir() === \"rtl\" ? \"chevron-left\" : \"chevron-right\");\n    }\n  }]);\n  return SlBreadcrumb;\n}(ShoelaceElement);\nSlBreadcrumb.styles = breadcrumb_styles_default;\n__decorateClass([i(\"slot\")], SlBreadcrumb.prototype, \"defaultSlot\", 2);\n__decorateClass([i('slot[name=\"separator\"]')], SlBreadcrumb.prototype, \"separatorSlot\", 2);\n__decorateClass([e2()], SlBreadcrumb.prototype, \"label\", 2);\nSlBreadcrumb = __decorateClass([e(\"sl-breadcrumb\")], SlBreadcrumb);\nexport { SlBreadcrumb };","map":null,"metadata":{},"sourceType":"module"}